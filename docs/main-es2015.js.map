{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/paths/Main/adicionar-ingrediente/adicionar-ingrediente.component.ts","./src/app/paths/Main/adicionar-ingrediente/adicionar-ingrediente.component.html","./src/app/paths/Main/adicionar-produto/adicionar-produto.component.ts","./src/app/paths/Main/adicionar-produto/adicionar-produto.component.html","./src/app/paths/Main/adicionar-promocao/adicionar-promocao.component.ts","./src/app/paths/Main/adicionar-promocao/adicionar-promocao.component.html","./src/app/paths/Main/alterar-ingrediente/alterar-ingrediente.component.ts","./src/app/paths/Main/alterar-ingrediente/alterar-ingrediente.component.html","./src/app/paths/Main/alterar-produto/alterar-produto.component.ts","./src/app/paths/Main/alterar-produto/alterar-produto.component.html","./src/app/paths/Main/carrinho/comprar.component.ts","./src/app/paths/Main/carrinho/comprar.component.html","./src/app/paths/Main/historico-vendas/historico-vendas.component.ts","./src/app/paths/Main/historico-vendas/historico-vendas.component.html","./src/app/paths/Main/produtos/produtoss.component.ts","./src/app/paths/Main/produtos/produtoss.component.html","./src/app/paths/Main/promocoes/promocoes.component.ts","./src/app/paths/Main/promocoes/promocoes.component.html","./src/app/paths/login/guard/admGuard/guard-adm.guard.ts","./src/app/paths/login/guard/auth.guard.ts","./src/app/paths/login/interceptors/token.interceptor.ts","./src/app/paths/login/login.component.ts","./src/app/paths/login/login.component.html","./src/app/paths/login/nao-logado/nao-logado.component.ts","./src/app/paths/login/nao-logado/nao-logado.component.html","./src/app/paths/login/registro/registro.component.ts","./src/app/paths/login/registro/registro.component.html","./src/app/paths/models/produto.ts","./src/app/paths/models/usuario.ts","./src/app/paths/nao-encontrada/nao-encontrada.component.ts","./src/app/paths/nao-encontrada/nao-encontrada.component.html","./src/app/paths/service/service_carrinho/carrinho.service.ts","./src/app/paths/service/service_login/auth.service.ts","./src/app/paths/service/service_login/cadastro.service.ts","./src/app/paths/service/service_produto/produto.service.ts","./src/app/paths/template/footer/footer.component.ts","./src/app/paths/template/footer/footer.component.html","./src/app/paths/template/header/header.component.ts","./src/app/paths/template/header/header.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PromocoesComponent} from './paths/Main/promocoes/promocoes.component';\nimport {AdicionarProdutoComponent} from './paths/Main/adicionar-produto/adicionar-produto.component';\nimport {HistoricoVendasComponent} from './paths/Main/historico-vendas/historico-vendas.component';\nimport {AdicionarIngredienteComponent} from './paths/Main/adicionar-ingrediente/adicionar-ingrediente.component';\nimport {NaoEncontradaComponent} from './paths/nao-encontrada/nao-encontrada.component';\nimport {ComprarComponent} from './paths/Main/carrinho/comprar.component';\nimport {LoginComponent} from './paths/login/login.component';\nimport {RegistroComponent} from './paths/login/registro/registro.component';\nimport {AuthGuard} from './paths/login/guard/auth.guard';\nimport {GuardAdmGuard} from './paths/login/guard/admGuard/guard-adm.guard';\nimport {ProdutossComponent} from './paths/Main/produtos/produtoss.component';\nimport {AlterarProdutoComponent} from './paths/Main/alterar-produto/alterar-produto.component';\nimport {AlterarIngredienteComponent} from './paths/Main/alterar-ingrediente/alterar-ingrediente.component';\nimport {AdicionarPromocaoComponent} from './paths/Main/adicionar-promocao/adicionar-promocao.component';\n\n\nconst routes: Routes = [{\n  path: 'produtos-categorias/produtos/:id', component: ProdutossComponent, canActivate: [AuthGuard]\n},\n\n  {\n    path: 'produtos-categorias',\n    loadChildren: () => import('./paths/Main/produtos-categoria/produtos-categoria.module').then(m => m.ProdutosCategoriaModule),\n    canActivate: [AuthGuard]\n  },\n  {path: '', redirectTo: 'produtos-categorias', pathMatch: 'full', canActivate: [AuthGuard]},\n  {path: 'promocoes', component: PromocoesComponent, canActivate: [AuthGuard]},\n  {path: 'adicionar-produto', component: AdicionarProdutoComponent, canActivate: [GuardAdmGuard, AuthGuard]},\n  {path: 'historico-vendas', component: HistoricoVendasComponent, canActivate: [GuardAdmGuard, AuthGuard]},\n  {path: 'adicionar-ingredientes', component: AdicionarIngredienteComponent, canActivate: [GuardAdmGuard, AuthGuard]},\n  {path: 'comprar', component: ComprarComponent, canActivate: [AuthGuard]},\n  {path: 'login', component: LoginComponent},\n  {path: 'registrar', component: RegistroComponent},\n  {path: 'alterar_produto', component: AlterarProdutoComponent},\n  {path: 'alterar_ingrediente', component: AlterarIngredienteComponent},\n  {path: 'adicionar-promocao', component: AdicionarPromocaoComponent},\n  {path: '**', component: NaoEncontradaComponent}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\nimport {AuthService} from './paths/service/service_login/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  mostrarMenu = this.authService.estaAutenticado();\n  title = 'lanchonete';\n\n  constructor(private authService: AuthService) {\n  }\n\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngOnInit() {\n    this.authService.mostrarMenu.subscribe(\n      mostrar => this.mostrarMenu = mostrar\n    );\n  }\n}\n","<ng-template #naologado class=\"d-grid\"><app-nao-logado></app-nao-logado></ng-template>\n<section class=\"bg-container\">\n  <app-header *ngIf=\"mostrarMenu else naologado \" class=\"\"></app-header>\n\n\n  <div\n    class=\"container-app  py-5 justify-content-around me-lg-auto ms-lg-5 me-md-auto ms-md-2 me-sm-auto me-sm-2 \">\n    <router-outlet></router-outlet>\n  </div>\n\n  <div  class=\" footer-container\">\n    <app-footer></app-footer>\n  </div>\n</section>\n\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HeaderComponent} from './paths/template/header/header.component';\nimport {FooterComponent} from './paths/template/footer/footer.component';\nimport {LoginComponent} from './paths/login/login.component';\nimport {RegistroComponent} from './paths/login/registro/registro.component';\nimport {PromocoesComponent} from './paths/Main/promocoes/promocoes.component';\nimport {AdicionarProdutoComponent} from './paths/Main/adicionar-produto/adicionar-produto.component';\nimport {HistoricoVendasComponent} from './paths/Main/historico-vendas/historico-vendas.component';\nimport {AdicionarIngredienteComponent} from './paths/Main/adicionar-ingrediente/adicionar-ingrediente.component';\nimport {NaoEncontradaComponent} from './paths/nao-encontrada/nao-encontrada.component';\nimport {ComprarComponent} from './paths/Main/carrinho/comprar.component';\nimport {AuthService} from './paths/service/service_login/auth.service';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NaoLogadoComponent} from './paths/login/nao-logado/nao-logado.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {ProdutossComponent} from './paths/Main/produtos/produtoss.component';\nimport {AlterarProdutoComponent} from './paths/Main/alterar-produto/alterar-produto.component';\nimport {AlterarIngredienteComponent} from './paths/Main/alterar-ingrediente/alterar-ingrediente.component';\nimport {TokenInterceptor} from './paths/login/interceptors/token.interceptor';\nimport { AdicionarPromocaoComponent } from './paths/Main/adicionar-promocao/adicionar-promocao.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    RegistroComponent,\n    PromocoesComponent,\n    AdicionarProdutoComponent,\n    HistoricoVendasComponent,\n    AdicionarIngredienteComponent,\n    NaoEncontradaComponent,\n    ComprarComponent,\n    NaoLogadoComponent,\n    ProdutossComponent,\n    AlterarProdutoComponent,\n    AlterarIngredienteComponent,\n    AdicionarPromocaoComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n\n\n  ],\n  providers: [\n    {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  },\n    AuthService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Ingrediente, Produto, Promocao} from '../../models/produto';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\n\n@Component({\n  selector: 'app-adicionar-ingrediente',\n  templateUrl: './adicionar-ingrediente.component.html',\n  styleUrls: ['./adicionar-ingrediente.component.scss']\n})\nexport class AdicionarIngredienteComponent implements OnInit {\n\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  produto: Ingrediente;\n  fotoSrc = '';\n  mostrarTexto = true;\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      name: ['', [Validators.required]],\n      imageName: ['', [Validators.required]],\n      price: ['', [Validators.required, Validators.min(1)]],\n      ingredients: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        // this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.mostrarTexto = false;\n        this.fotoSrc = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  addProduto() {\n    if (this.formAddProduto.dirty && this.formAddProduto.valid) {\n      this.produto = Object.assign({}, this.produto, this.formAddProduto.value);\n      this.produtoService.postProduto(this.produto).subscribe(res => {\n        alert('enviado com sucesso!');\n      });\n      console.log('produto adicionada', this.produto);\n    } else {\n      alert('preencha o formulario!');\n    }\n\n  }\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Adicionar itens</h1>\n  </div>\n  <!--    nome do produto -->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"produto\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control \" id=\"produto\" placeholder=\"nome do produto\" formControlName=\"name\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty), 'is-valid':formAddProduto.controls['name'].valid} \"\n\n           [class.valid]=\"formAddProduto.controls['name'].valid\"\n           [class.invalid]=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['name'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    preço do produto -->\n    <label for=\"preco\" class=\"form-label\">preço </label>\n    <input type=\"number\" class=\"form-control\" id=\"preco\" placeholder=\"R$ 00,00\" formControlName=\"price\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty), 'is-valid':formAddProduto.controls['price'].valid} \"\n           [class.valid]=\"formAddProduto.controls['price'].valid\"\n           [class.invalid]=\"formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty)\">\n\n    <div *ngIf=\"formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty)\">\n\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['price'].hasError('required')\">\n        Esse campo precisa ser preenchido com números.\n      </small>\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['price'].hasError('min')\">\n        Esse campo precisa ser maior que 00,00.\n      </small>\n    </div>\n  </div>\n\n  <!--ingredientes do produto-->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"texto\" class=\"form-label \">ingredientes</label>\n    <textarea class=\"form-control \" id=\"texto\" placeholder=\"digite o ingrediente...\" formControlName=\"ingredients\"\n              [ngClass]=\"{'is-invalid': formAddProduto.controls['ingredients'].invalid &&\n           (formAddProduto.controls['ingredients'].touched || formAddProduto.controls['ingredients'].dirty), 'is-valid':formAddProduto.controls['ingredients'].valid}\"\n              [class.valid]=\"formAddProduto.controls['ingredients'].valid\"\n              [class.invalid]=\"formAddProduto.controls['ingredients'].invalid &&\n           (formAddProduto.controls['ingredients'].touched || formAddProduto.controls['ingredients'].dirty)\"></textarea>\n\n    <div *ngIf=\"formAddProduto.controls['ingredients'].invalid &&\n           (formAddProduto.controls['ingredients'].touched || formAddProduto.controls['ingredients'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['name'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto \">\n    <label for=\"formFile\"  id=\"span_imagem\" class=\"form-label img-label\"><span *ngIf=\"mostrarTexto\">escolha uma imagem</span><img\n      [src]=\"fotoSrc\" class=\" img\"\n     ></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imageName\"\n           [class.valid]=\"formAddProduto.controls['imageName'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imageName'].invalid &&\n           (formAddProduto.controls['imageName'].touched || formAddProduto.controls['imageName'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"d-lg-flex  flex-wrap mx-auto\">\n\n    <div class=\"col-auto ms-lg-3 \">\n      <button type=\"submit\" class=\"btn  mb-3 \" (click)=\"addProduto()\">Adicionar\n        Produto\n      </button>\n    </div>\n  </div>\n\n</form>\n\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Produto} from '../../models/produto';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\n\n@Component({\n  selector: 'app-contato',\n  templateUrl: './adicionar-produto.component.html',\n  styleUrls: ['./adicionar-produto.component.scss']\n})\nexport class AdicionarProdutoComponent implements OnInit {\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  produto: Produto = new Produto();\n  fotoSrc = '';\n  mostrarTexto = true;\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      name: ['', [Validators.required]],\n      imageName: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        // this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.mostrarTexto = false;\n        this.fotoSrc = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  enviar() {\n    if (this.formAddProduto.dirty && this.formAddProduto.valid) {\n      this.produto = Object.assign({}, this.produto, this.formAddProduto.value);\n      console.log(this.produto);\n\n      this.produtoService.postProdutoLista(this.produto).subscribe(res => {\n        alert('enviado com sucesso!');\n      });\n    } else {\n      alert('preencha o formulario!');\n    }\n\n\n  }\n\n  atualizar() {\n    console.log('atualizar', this.formAddProduto.value);\n  }\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Adicionar Lista de produtos</h1>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    nome do produto -->\n    <label for=\"email\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Digite um nome...\" formControlName=\"name\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty), 'is-valid':formAddProduto.controls['name'].valid} \"\n           [class.valid]=\"formAddProduto.controls['name'].valid\"\n           [class.invalid]=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['name'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto\">\n    <label for=\"formFile\" id=\"span_imagem\" class=\"form-label img-label\"><span *ngIf=\"mostrarTexto\">escolha uma imagem</span> <img\n      [src]=\"fotoSrc\" class=\" img\" ></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imageName\"\n           [class.valid]=\"formAddProduto.controls['imageName'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imageName'].invalid &&\n           (formAddProduto.controls['imageName'].touched || formAddProduto.controls['imageName'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"col-auto mx-auto\">\n    <button type=\"submit\" class=\"btn  mb-3\" (click)=\"enviar()\">Enviar</button>\n  </div>\n\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Ingrediente, Produto, Promocao} from '../../models/produto';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\n\n@Component({\n  selector: 'app-adicionar-promocao',\n  templateUrl: './adicionar-promocao.component.html',\n  styleUrls: ['./adicionar-promocao.component.scss']\n})\nexport class AdicionarPromocaoComponent implements OnInit {\n\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  promocao: Promocao;\n  fotoSrc = '';\n  mostrarTexto = true;\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      name: ['', [Validators.required]],\n      imageName: ['', [Validators.required]],\n      price: ['', [Validators.required, Validators.min(1)]],\n      details: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        // this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.mostrarTexto = false;\n        this.fotoSrc = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  addPromocao() {\n    if (this.formAddProduto.dirty && this.formAddProduto.valid) {\n      this.promocao = Object.assign({}, this.promocao, this.formAddProduto.value);\n      this.produtoService.postPromocoes(this.promocao).subscribe(res => {\n        alert('enviado com sucesso!');\n      });\n      console.log('promoção adicionada');\n    } else {\n      alert('preencha o formulario!');\n    }\n\n  }\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Adicionar promoção</h1>\n  </div>\n  <!--    nome do produto -->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"produto\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control \" id=\"produto\" placeholder=\"nome do produto\" formControlName=\"name\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty), 'is-valid':formAddProduto.controls['name'].valid} \"\n\n           [class.valid]=\"formAddProduto.controls['name'].valid\"\n           [class.invalid]=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['name'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    preço do produto -->\n    <label for=\"preco\" class=\"form-label\">preço </label>\n    <input type=\"number\" class=\"form-control\" id=\"preco\" placeholder=\"R$ 00,00\" formControlName=\"price\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty), 'is-valid':formAddProduto.controls['price'].valid} \"\n           [class.valid]=\"formAddProduto.controls['price'].valid\"\n           [class.invalid]=\"formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty)\">\n\n    <div *ngIf=\"formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty)\">\n\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['price'].hasError('required')\">\n        Esse campo precisa ser preenchido com números.\n      </small>\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['price'].hasError('min')\">\n        Esse campo precisa ser maior que 00,00.\n      </small>\n    </div>\n  </div>\n\n  <!--ingredientes do produto-->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"texto\" class=\"form-label \">detalhes</label>\n    <textarea class=\"form-control \" id=\"texto\" placeholder=\"digite o detalhe...\" formControlName=\"details\"\n              [ngClass]=\"{'is-invalid': formAddProduto.controls['details'].invalid &&\n           (formAddProduto.controls['details'].touched || formAddProduto.controls['details'].dirty), 'is-valid':formAddProduto.controls['details'].valid}\"\n              [class.valid]=\"formAddProduto.controls['details'].valid\"\n              [class.invalid]=\"formAddProduto.controls['details'].invalid &&\n           (formAddProduto.controls['details'].touched || formAddProduto.controls['details'].dirty)\"></textarea>\n\n    <div *ngIf=\"formAddProduto.controls['details'].invalid &&\n           (formAddProduto.controls['details'].touched || formAddProduto.controls['details'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['name'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto \">\n    <label for=\"formFile\"  id=\"span_imagem\" class=\"form-label img-label\"><span *ngIf=\"mostrarTexto\">escolha uma imagem</span><img\n      [src]=\"fotoSrc\" class=\" img\"\n    ></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imageName\"\n           [class.valid]=\"formAddProduto.controls['imageName'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imageName'].invalid &&\n           (formAddProduto.controls['imageName'].touched || formAddProduto.controls['imageName'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"d-lg-flex  flex-wrap mx-auto\">\n    <div class=\"col-auto   ms-lg-3\">\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"addPromocao()\">Adicionar\n        Promoção\n      </button>\n    </div>\n  </div>\n\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Ingrediente, Produto} from '../../models/produto';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\n\n@Component({\n  selector: 'app-alterar-ingrediente',\n  templateUrl: './alterar-ingrediente.component.html',\n  styleUrls: ['./alterar-ingrediente.component.scss']\n})\nexport class AlterarIngredienteComponent implements OnInit {\n\n\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  produto: Ingrediente = new Ingrediente();\n  produtos: Produto[];\n  fotoSrc = '';\n  mostrarTexto = true;\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      nome: ['', [Validators.required]],\n      imagem: ['', [Validators.required]],\n      preco: ['', [Validators.required, Validators.min(1)]],\n      ingredientes: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.mostrarTexto = false;\n        this.fotoSrc = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n  }\n\n  atualizarPromocao() {\n\n  }\n\n  atualizarProduto() {\n\n  }\n\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">alterar itens</h1>\n  </div>\n  <!--    nome do produto -->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"produto\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control \" id=\"produto\" placeholder=\"nome do produto\" formControlName=\"nome\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty), 'is-valid':formAddProduto.controls['nome'].valid} \"\n\n           [class.valid]=\"formAddProduto.controls['nome'].valid\"\n           [class.invalid]=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['nome'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    preço do produto -->\n    <label for=\"preco\" class=\"form-label\">preço </label>\n    <input type=\"number\" class=\"form-control\" id=\"preco\" placeholder=\"R$ 00,00\" formControlName=\"preco\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['preco'].invalid &&\n           (formAddProduto.controls['preco'].touched || formAddProduto.controls['preco'].dirty), 'is-valid':formAddProduto.controls['preco'].valid} \"\n           [class.valid]=\"formAddProduto.controls['preco'].valid\"\n           [class.invalid]=\"formAddProduto.controls['preco'].invalid &&\n           (formAddProduto.controls['preco'].touched || formAddProduto.controls['preco'].dirty)\">\n\n    <div *ngIf=\"formAddProduto.controls['preco'].invalid &&\n           (formAddProduto.controls['preco'].touched || formAddProduto.controls['preco'].dirty)\">\n\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['preco'].hasError('required')\">\n        Esse campo precisa ser preenchido com números.\n      </small>\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['preco'].hasError('min')\">\n        Esse campo precisa ser maior que 00,00.\n      </small>\n    </div>\n  </div>\n\n  <!--ingredientes do produto-->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"texto\" class=\"form-label \">ingredientes</label>\n    <textarea class=\"form-control \" id=\"texto\" placeholder=\"digite o ingrediente...\" formControlName=\"ingredientes\"\n              [ngClass]=\"{'is-invalid': formAddProduto.controls['ingredientes'].invalid &&\n           (formAddProduto.controls['ingredientes'].touched || formAddProduto.controls['ingredientes'].dirty), 'is-valid':formAddProduto.controls['ingredientes'].valid}\"\n              [class.valid]=\"formAddProduto.controls['ingredientes'].valid\"\n              [class.invalid]=\"formAddProduto.controls['ingredientes'].invalid &&\n           (formAddProduto.controls['ingredientes'].touched || formAddProduto.controls['ingredientes'].dirty)\"></textarea>\n\n    <div *ngIf=\"formAddProduto.controls['ingredientes'].invalid &&\n           (formAddProduto.controls['ingredientes'].touched || formAddProduto.controls['ingredientes'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['nome'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto \">\n    <label for=\"formFile\"  id=\"span_imagem\" class=\"form-label img-label\"><span *ngIf=\"mostrarTexto\">escolha uma imagem</span><img\n      [src]=\"fotoSrc\" class=\" img\"\n    ></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imagem\"\n           [class.valid]=\"formAddProduto.controls['imagem'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imagem'].invalid &&\n           (formAddProduto.controls['imagem'].touched || formAddProduto.controls['imagem'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"d-lg-flex  flex-wrap mx-auto\">\n    <div class=\"col-auto  ms-lg-3\">\n      <button type=\"submit\" class=\"btn  mb-3 \" (click)=\"atualizarProduto()\">\n        Atualizar\n        Produto\n      </button>\n    </div>\n\n    <div class=\"col-auto ms-lg-3 \">\n      <button type=\"submit\" class=\"btn  mb-3 \" (click)=\"atualizarPromocao()\">Atualizar\n        Promoção\n      </button>\n    </div>\n\n  </div>\n\n</form>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Produto} from '../../models/produto';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\n\n@Component({\n  selector: 'app-alterar-produto',\n  templateUrl: './alterar-produto.component.html',\n  styleUrls: ['./alterar-produto.component.scss']\n})\nexport class AlterarProdutoComponent implements OnInit {\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  produto: Produto = new Produto();\n  fotoSrc = '';\n  mostrarTexto = true;\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      nome: ['', [Validators.required]],\n      imagem: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.mostrarTexto = false;\n        this.fotoSrc = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n\n  }\n  atualizar() {\n    console.log('atualizar', this.formAddProduto.value);\n  }\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">alterar Lista de produtos</h1>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    nome do produto -->\n    <label for=\"email\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Digite um nome...\" formControlName=\"nome\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty), 'is-valid':formAddProduto.controls['nome'].valid} \"\n           [class.valid]=\"formAddProduto.controls['nome'].valid\"\n           [class.invalid]=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['nome'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto\">\n    <label for=\"formFile\" id=\"span_imagem\" class=\"form-label img-label\"><span *ngIf=\"mostrarTexto\">escolha uma imagem</span> <img\n      [src]=\"fotoSrc\" class=\" img\" ></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imagem\"\n           [class.valid]=\"formAddProduto.controls['imagem'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imagem'].invalid &&\n           (formAddProduto.controls['imagem'].touched || formAddProduto.controls['imagem'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"col-auto mx-auto\">\n    <button type=\"submit\" class=\"btn  mb-3 ms-4\" (click)=\"atualizar()\">Atualizar\n    </button>\n  </div>\n\n</form>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Ingrediente} from '../../models/produto';\nimport {CarrinhoService} from '../../service/service_carrinho/carrinho.service';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-comprar',\n  templateUrl: './comprar.component.html',\n  styleUrls: ['./comprar.component.scss']\n})\nexport class ComprarComponent implements OnInit {\n  produto: Ingrediente;\n  produtos$: Observable<Ingrediente[]>;\n  total = 0;\n\n  constructor(private route: Router, private carrinhoService: CarrinhoService) {\n  }\n\n  ngOnInit(): void {\n    this.getCarrinho();\n  }\n\n  getCarrinho() {\n    console.log(this.produtos$);\n    this.produtos$ = this.carrinhoService.obtemCarrinho()\n      .pipe(\n        catchError(error => {\n          return throwError(error.message);\n        })\n      );\n  }\n\n  // calculaTotal() {\n  //   this.total = this.itensCarrinho.reduce((prev, curr) => prev + (curr.price * this.itensCarrinho.length), 0);\n  // }\n\n  removeProdutoCarrinho(id: number) {\n    this.carrinhoService.removerCarrinho(id);\n    // this.calculaTotal();\n  }\n\n  comprar() {\n    alert('parabéns, você finalizou a sua compra!');\n    this.carrinhoService.limparCarrinho();\n    this.route.navigate(['/']);\n  }\n\n}\n","<section>\n  <div class=\"mx-auto d-flex mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Carrinho</h1>\n  </div>\n<div class=\"d-flex row div-carrinho \">\n\n\n  <ng-container *ngIf=\"produtos$ | async as produtos; else semProduto\">\n    <ul>\n      <li class=\"justify-content-between align-items-center d-flex\" *ngFor=\"let carrinho of produtos\">\n\n        <img [src]=\"carrinho.imageName\">\n        <p>{{carrinho.name}}</p>\n        <p>{{carrinho.price|currency: \"BRL\"}}</p>\n\n\n        <button class=\"remove-button\" (click)=\"removeProdutoCarrinho(carrinho.id)\"><i class=\"fa-solid fa-xmark\"></i>\n        </button>\n      </li>\n\n    </ul>\n    <h2 class=\"cart-total ms-4\">Total:{{total}}</h2>\n    <button class=\"buy-button btn w-auto \" (click)=\"comprar()\">Comprar</button>\n  </ng-container>\n</div>\n\n  <ng-template #semProduto>\n    <div class=\"shimmer\">\n      <div class=\"wrapper\">\n        <div class=\"image-card animate\"></div>\n        <div class=\"stroke animate title\"></div>\n        <div class=\"stroke animate link\"></div>\n        <div class=\"stroke animate description\"></div>\n      </div>\n    </div>\n  </ng-template>\n\n\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-historico-vendas',\n  templateUrl: './historico-vendas.component.html',\n  styleUrls: ['./historico-vendas.component.scss']\n})\nexport class HistoricoVendasComponent implements OnInit {\n  total = 20;\n  preco = 20;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  remover() {\n\n  }\n}\n","<section class=\"tabela\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Historico de vendas</h1>\n  </div>\n  <table class=\"table mx-auto w-75 \">\n    <thead class=\"head-table\">\n    <tr>\n      <th scope=\"col\"></th>\n      <th scope=\"col\">nome</th>\n      <th scope=\"col\">produto comprado</th>\n      <th scope=\"col\">preço</th>\n    </tr>\n    </thead>\n    <tbody class=\"tbody-table\">\n    <tr>\n      <th scope=\"row\">1</th>\n      <td class=\"tabela\">Mark</td>\n      <td class=\"tabela\">hamburguer</td>\n      <td class=\"tabela\">{{preco | currency:\"BRL\"}}</td>\n      <td class=\"border-0\"><button class=\"btn remove-button \" (click)=\"remover()\"><i class=\"fa-solid fa-xmark\"></i></button></td>\n    </tr>\n    </tbody>\n    <tfoot>\n    <tr>\n      <th scope=\"col\">total</th>\n      <td rowspan=\"3\" class=\"tabela \">{{total | currency:\"BRL\"}}</td>\n    </tr>\n\n    </tfoot>\n  </table>\n</section>\n\n","import {Component, OnInit} from '@angular/core';\nimport {Ingrediente, Produto} from '../../models/produto';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from '../../service/service_login/auth.service';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\nimport {CarrinhoService} from '../../service/service_carrinho/carrinho.service';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-produtoss',\n  templateUrl: './produtoss.component.html',\n  styleUrls: ['./produtoss.component.scss']\n})\nexport class ProdutossComponent implements OnInit {\n  eAdm = this.authService.estaAutenticado();\n  produtos: Ingrediente;\n  produtos$: Observable<Ingrediente>;\n  // produtos: Ingrediente[] = [];\n  id = 1;\n\n  constructor(\n    private route: Router,\n    private authService: AuthService,\n    private produtoService: ProdutoService,\n    private carrinhoS: CarrinhoService) {\n  }\n\n  ngOnInit(): void {\n    this.getIngredientes(this.id);\n  }\n\n  getIngredientes(id: number) {\n    this.produtos$ =\n      this.produtoService.getIngrediente(id).pipe(\n        catchError(error => {\n          // this.route.navigateByUrl('/error');\n          // alert('Problemas no server tente novamente mais tarde.');\n          return throwError(error);\n        })\n      );\n  }\n\n  comprar() {\n    this.carrinhoS.adicionarAoCarrinho(this.produtos).subscribe(res => {\n      this.route.navigate(['carrinho']);\n      alert('enviado com sucesso!');\n    });\n  }\n\n  remover(id: number) {\n\n\n  }\n\n  atualizar() {\n    this.route.navigate(['alterar_ingrediente']);\n  }\n}\n","\n\n<div class=\"row row-cols-1 row-cols-md-2 g-4 w-100\">\n  <!--inserir as variaveis aqui-->\n  <ng-container *ngIf=\"produtos$ | async as produtos; else loading\" >\n  <div class=\"card card-container p-2 ms-5 \" *ngFor=\"let produto of produtos\">\n    <img [src]=\"produto.imageName\" class=\"card-img-top img-fluid\" alt=\"...\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{produto?.name}}</h5>\n      <p class=\"card-text\">{{produto?.ingredients}}</p>\n      <p class=\"card-text\">{{produto?.price | currency: 'BRL'}}</p>\n      <div class=\"d-flex justify-content-between\">\n        <a class=\"btn btn-card\" (click)=\"comprar()\">Comprar</a>\n        <button class=\"btn remove-button\" (click)=\"remover(produto.id)\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-xmark\"></i></button>\n        <button class=\"btn remove-button\" (click)=\"atualizar()\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-pen-to-square\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n  </ng-container>\n</div>\n\n\n<ng-template #loading >\n  <div class=\"card_ p-2 ms-5\">\n    <div class=\"shimmerBG media\"></div>\n    <div class=\"p-32\">\n      <div class=\"shimmerBG title-line\"></div>\n      <div class=\"shimmerBG title-line end\"></div>\n\n      <div class=\"shimmerBG content-line m-t-24\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line end\"></div>\n    </div>\n  </div>\n\n  <div class=\"card_ p-2 ms-5\">\n    <div class=\"shimmerBG media\"></div>\n    <div class=\"p-32\">\n      <div class=\"shimmerBG title-line\"></div>\n      <div class=\"shimmerBG title-line end\"></div>\n\n      <div class=\"shimmerBG content-line m-t-24\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line end\"></div>\n    </div>\n  </div>\n\n  <div class=\"card_ p-2 ms-5\">\n    <div class=\"shimmerBG media\"></div>\n    <div class=\"p-32\">\n      <div class=\"shimmerBG title-line\"></div>\n      <div class=\"shimmerBG title-line end\"></div>\n\n      <div class=\"shimmerBG content-line m-t-24\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line end\"></div>\n    </div>\n  </div>\n</ng-template>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../service/service_login/auth.service';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\nimport {Promocao} from '../../models/produto';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {CarrinhoService} from '../../service/service_carrinho/carrinho.service';\n\n@Component({\n  selector: 'app-promocoes',\n  templateUrl: './promocoes.component.html',\n  styleUrls: ['./promocoes.component.scss']\n})\nexport class PromocoesComponent implements OnInit {\n  eAdm = this.authService.estaAutenticado();\n  produtos$: Observable<Promocao[]>;\n  produto: Promocao = new Promocao();\n\n  constructor(private route: Router, private authService: AuthService, private produtoService: ProdutoService,\n              private carrinhoS: CarrinhoService) {\n  }\n\n  ngOnInit(): void {\n    this.getPromocoes();\n  }\n\n  getPromocoes() {\n    this.produtos$ = this.produtoService.getPromocoes().pipe(\n      catchError(error => {\n        return throwError(error);\n      })\n    );\n  }\n\n  comprar() {\n    this.carrinhoS.adicionarAoCarrinhoP(this.produto).subscribe(res => {\n      this.route.navigate(['carrinho']);\n      alert('enviado com sucesso!');\n    });\n  }\n\n  remover(id: number) {\n    // this.produtos = this.produtos.filter(produtos => produtos.id !== id);\n    this.produtoService.deletePromocoes(this.produto.id);\n  }\n\n  atualizar() {\n    this.route.navigate(['alterar_ingrediente']);\n  }\n}\n"," <div class=\"row row-cols-auto  row-cols-md-2 g-4 w-100 \">\n    <!--inserir as variaveis aqui-->\n   <ng-container *ngIf=\"produtos$ | async as produtos; else loading\" >\n    <div class=\"d-flex flex-column  card card-container p-2 ms-5 \" *ngFor=\"let produto of produtos\">\n      <div >\n        <img [src]=\"produto.imagem\" class=\"card-img-top img-fluid w-100\" alt=\"...\" width=\"400\" height=\"300\">\n      </div>\n\n      <div class=\"card-body \">\n        <div>\n          <h5 class=\"card-title \">{{produto.nome}}</h5>\n        </div>\n       <div>\n         <p class=\"card-text\">{{produto.detalhe}}</p>\n       </div>\n\n        <div>\n          <p class=\"card-text\">{{produto.preco | currency: \"BRL\"}}</p>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div><button class=\"btn btn-card\" (click)=\"comprar()\">Comprar</button></div>\n        <div><button class=\"btn remove-button\" (click)=\"remover(produto.id)\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-xmark\"></i></button></div>\n        <div><button class=\"btn remove-button\" (click)=\"atualizar()\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-pen-to-square\"></i></button></div>\n      </div>\n\n    </div>\n   </ng-container>\n\n  </div>\n\n <ng-template #loading >\n   <div class=\"card_ p-2 ms-5\">\n     <div class=\"shimmerBG media\"></div>\n     <div class=\"p-32\">\n       <div class=\"shimmerBG title-line\"></div>\n       <div class=\"shimmerBG title-line end\"></div>\n\n       <div class=\"shimmerBG content-line m-t-24\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line end\"></div>\n     </div>\n   </div>\n\n   <div class=\"card_ p-2 ms-5\">\n     <div class=\"shimmerBG media\"></div>\n     <div class=\"p-32\">\n       <div class=\"shimmerBG title-line\"></div>\n       <div class=\"shimmerBG title-line end\"></div>\n\n       <div class=\"shimmerBG content-line m-t-24\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line end\"></div>\n     </div>\n   </div>\n\n   <div class=\"card_ p-2 ms-5\">\n     <div class=\"shimmerBG media\"></div>\n     <div class=\"p-32\">\n       <div class=\"shimmerBG title-line\"></div>\n       <div class=\"shimmerBG title-line end\"></div>\n\n       <div class=\"shimmerBG content-line m-t-24\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line end\"></div>\n     </div>\n   </div>\n </ng-template>\n\n\n\n\n\n\n\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../../../service/service_login/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuardAdmGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.authService.eadm()) {\n      this.route.navigate(['nao-encontrada']);\n      return false;\n    }\n    return true;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../../service/service_login/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {\n  }\n\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.authService.estaAutenticado()) {\n      this.route.navigate(['login']);\n    }\n    return true;\n\n\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../../service/service_login/auth.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {\n  }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = this.authService.getToken();\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `bearer ${token}`\n\n        },\n        withCredentials: true\n      });\n      console.log(request);\n    }\n    return next.handle(request);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../service/service_login/auth.service';\nimport {Usuario} from '../models/usuario';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CookieService} from 'ngx-cookie-service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  formLogin: FormGroup;\n  usuario: Usuario;\n\n\n  constructor(private route: Router, public authService: AuthService, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    setTimeout(() => {\n      console.log('tempo de login expirado');\n      this.authService.logout();\n      this.route.navigate(['login']);\n\n    }, 1000 * 1800);\n  }\n\n  createForm() {\n    this.formLogin = this.fb.group({\n      login: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  logar() {\n    // if (this.formLogin.dirty && this.formLogin.valid) {\n    //   this.usuario = Object.assign({}, this.usuario, this.formLogin.value);\n    //   if (this.authService.login(this.usuario)) {\n    //     this.route.navigate(['/']);\n    //     return;\n    //   }\n    // }\n\n    if (this.formLogin.dirty && this.formLogin.valid) {\n      this.usuario = Object.assign({}, this.usuario, this.formLogin.value);\n      // console.log(this.usuario);\n      this.authService.logar(this.usuario);\n      this.route.navigate(['/']);\n\n    } else {\n      alert('preencha o formulario!');\n    }\n  }\n\n  registrar() {\n    // apos fazer o http vou mudar\n    this.route.navigate(['registrar']);\n  }\n}\n","<form class=\"login-bg p-5 rounded d-grid\" [formGroup]=\"formLogin\" (ngSubmit)=\"logar()\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-login mb-3 mx-auto\">Login</h1>\n  </div>\n  <div class=\"mb-3 d-grid mx-auto mb-3 div-input\">\n    <!--    login -->\n    <label for=\"login\" class=\"col-sm-2 col-form-label\">login</label>\n    <input type=\"text\" class=\"form-control\" id=\"login\"\n           [ngClass]=\"{'is-invalid': formLogin.controls['login'].invalid &&\n           (formLogin.controls['login'].touched || formLogin.controls['login'].dirty), 'is-valid':formLogin.controls['login'].valid} \"\n           placeholder=\"login\"\n           formControlName=\"login\"\n           [class.valid]=\"formLogin.controls['login'].valid\"\n           [class.invalid]=\"formLogin.controls['login'].invalid &&\n(formLogin.controls['login'].touched || formLogin.controls['login'].dirty)\">\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-4 div-input\">\n    <!--   password -->\n    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">senha</label>\n    <input type=\"password\" class=\"form-control\" id=\"inputPassword\"\n           placeholder=\"senha\"\n           [ngClass]=\"{'is-invalid': formLogin.controls['password'].invalid &&\n           (formLogin.controls['password'].touched || formLogin.controls['password'].dirty), 'is-valid':formLogin.controls['password'].valid} \"\n           formControlName=\"password\" [class.valid]=\"formLogin.controls['password'].valid\"\n           [class.invalid]=\"formLogin.controls['password'].invalid &&\n(formLogin.controls['password'].touched || formLogin.controls['password'].dirty)\">\n  </div>\n\n  <div class=\"d-flex mx-auto my-5\">\n    <div class=\"col-auto \">\n      <input type=\"submit\" class=\"btn  mb-3 botao\" value=\"login\" [disabled]=\"!formLogin.valid\">\n    </div>\n    <div class=\"col-auto ms-3\">\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"registrar()\">registrar</button>\n    </div>\n  </div>\n</form>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {LoginComponent} from '../login.component';\nimport {AuthService} from '../../service/service_login/auth.service';\n\n@Component({\n  selector: 'app-nao-logado',\n  templateUrl: './nao-logado.component.html',\n  styleUrls: ['./nao-logado.component.scss']\n})\nexport class NaoLogadoComponent implements OnInit {\n\n\n  constructor(loginService: AuthService) {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<nav class=\"navbar login-container\">\n  <div class=\"container-fluid mx-auto \">\n\n    <h1 class=\"navbar-brand mb-0 mx-auto hamburguer\"><i class=\"fa-solid fa-burger\"></i></h1>\n  </div>\n</nav>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../service/service_login/auth.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Usuario} from '../../models/usuario';\nimport {CadastroService} from '../../service/service_login/cadastro.service';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.scss']\n})\nexport class RegistroComponent implements OnInit {\n  mostrarBtn = !this.authService.estaAutenticado();\n  usuario: Usuario = new Usuario();\n  formRegistro: FormGroup;\n\n  constructor(private authService: AuthService, private fb: FormBuilder, private cadastroService: CadastroService) {\n  }\n\n  createForm() {\n    this.formRegistro = this.fb.group({\n      login: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      name: ['', [Validators.minLength(4), Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  registrar() {\n    if (this.formRegistro.dirty && this.formRegistro.valid) {\n      this.usuario = Object.assign({}, this.usuario, this.formRegistro.value);\n      this.cadastroService.postLogin(this.usuario).subscribe(res => {\n        alert('enviado com sucesso!');\n      });\n      console.log('registrar usuario', this.usuario);\n      return;\n    }\n    alert('preencha o formulario!');\n\n  }\n\n  registrarAdm() {\n    if (this.formRegistro.dirty && this.formRegistro.valid) {\n      this.usuario = Object.assign({}, this.usuario, this.formRegistro.value);\n      this.cadastroService.postLoginAdm(this.usuario).subscribe(res => {\n        alert('enviado com sucesso!');\n      });\n      console.log('registrarAdm', this.usuario);\n      return;\n    }\n    alert('preencha o formulario!');\n  }\n}\n","<div class=\"registro-bg\">\n\n\n  <form class=\"d-grid py-5 \" [formGroup]=\"formRegistro\">\n    <div class=\"mx-auto d-grid mb-5 h1-bg\">\n      <h1 class=\"h1-registro mb-3 mx-auto\"> Registro </h1>\n    </div>\n    <!--  login-->\n    <div class=\"mb-3 div-input mx-auto\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">login </label>\n      <input type=\"login\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\"\n             [ngClass]=\"{'is-invalid': formRegistro.controls['login'].invalid &&\n           (formRegistro.controls['login'].touched || formRegistro.controls['login'].dirty), 'is-valid':formRegistro.controls['login'].valid} \"\n\n             formControlName=\"login\"\n             [class.valid]=\"formRegistro.controls['login'].valid\"\n             [class.invalid]=\"formRegistro.controls['login'].invalid &&\n(formRegistro.controls['login'].touched || formRegistro.controls['login'].dirty)\">\n      <div\n        *ngIf=\"formRegistro.controls['login'].invalid && (formRegistro.controls['login'].touched || formRegistro.controls['login'].dirty)\">\n        <small class=\"error-message\" *ngIf=\"formRegistro.controls['login'].hasError('required')\">\n          Esse campo precisa ser preenchido.\n        </small>\n\n      </div>\n    </div>\n    <!--senha-->\n    <div class=\" mx-auto  div-input\">\n      <div class=\"col-auto\">\n\n      </div>\n      <div class=\"col-auto\">\n        <label for=\"inputPassword6\" class=\"col-form-label\">password</label>\n        <input type=\"password\" id=\"inputPassword6\" class=\"form-control\" formControlName=\"password\" placeholder=\"insira sua senha...\"\n               [ngClass]=\"{'is-invalid': formRegistro.controls['password'].invalid &&\n           (formRegistro.controls['password'].touched || formRegistro.controls['password'].dirty), 'is-valid':formRegistro.controls['password'].valid} \"\n\n               [class.valid]=\"formRegistro.controls['password'].valid\"\n               [class.invalid]=\"formRegistro.controls['password'].invalid &&\n(formRegistro.controls['password'].touched || formRegistro.controls['password'].dirty)\">\n        <div *ngIf=\"formRegistro.controls['password'].invalid &&\n           (formRegistro.controls['password'].touched || formRegistro.controls['password'].dirty)\">\n          <small class=\"error-message\" *ngIf=\"formRegistro.controls['password'].hasError('required')\">\n            Esse campo precisa ser preenchido.\n          </small>\n\n        </div>\n      </div>\n    </div>\n    <!--nome-->\n    <div class=\" g-3  mx-auto div-input \" >\n      <div class=\"col-auto\">\n\n      </div>\n      <div class=\"col-auto\">\n        <label for=\"nome\" class=\"col-form-label\">nome</label>\n        <input type=\"text\" id=\"nome\" class=\"form-control\" formControlName=\"name\" placeholder=\"insira seu nome...\"\n               [ngClass]=\"{'is-invalid': formRegistro.controls['name'].invalid &&\n           (formRegistro.controls['name'].touched || formRegistro.controls['name'].dirty), 'is-valid':formRegistro.controls['name'].valid} \"\n               [class.valid]=\"formRegistro.controls['name'].valid\"\n               [class.invalid]=\"formRegistro.controls['name'].invalid &&\n           (formRegistro.controls['name'].touched || formRegistro.controls['name'].dirty)\">\n        <div *ngIf=\"formRegistro.controls['name'].invalid &&\n           (formRegistro.controls['name'].touched || formRegistro.controls['name'].dirty)\">\n          <small class=\"error-message\" *ngIf=\"formRegistro.controls['name'].hasError('minlength')\">\n            Esse campo precisa de no minimo 4 caracteres.\n          </small>\n          <small class=\"error-message\" *ngIf=\"formRegistro.controls['name'].hasError('required')\">\n            Esse campo precisa ser preenchido.\n          </small>\n\n        </div>\n\n      </div>\n    </div>\n\n\n  </form>\n  <div class=\"d-flex my-5\">\n    <div class=\"col-auto mx-auto\">\n      <button type=\"submit\" class=\"btn  mb-3 me-4\" routerLink=\"/login\" *ngIf=\"mostrarBtn\">Voltar ao login</button>\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"registrar()\" *ngIf=\"mostrarBtn\" >registrar</button>\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"registrarAdm()\" *ngIf=\"!mostrarBtn\">registrar</button>\n\n\n    </div>\n  </div>\n</div>\n\n","export class Produto {\r\n  id?: number;\r\n  name: string;\r\n  imageName: string;\r\n}\r\n\r\nexport class Ingrediente {\r\n  id?: number;\r\n  name: string;\r\n  imageName: string;\r\n  price: number;\r\n  ingredients: string;\r\n}\r\n\r\nexport class Promocao {\r\n  id?: number;\r\n  name: string;\r\n  imageName: string;\r\n  price: number;\r\n  details: string;\r\n}\r\n\r\n\r\n\r\n\r\n","export class Usuario {\r\n  id?: string;\r\n  login: string;\r\n  password: string;\r\n  role: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nao-encontrada',\n  templateUrl: './nao-encontrada.component.html',\n  styleUrls: ['./nao-encontrada.component.scss']\n})\nexport class NaoEncontradaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"container\">\n  <i class=\"fa-solid fa-x\"></i>\n  <h2> página não encontrada</h2>\n</section>\n","import {Injectable} from '@angular/core';\nimport {Ingrediente, Produto, Promocao} from '../../models/produto';\nimport {Observable, Subscription} from 'rxjs';\nimport {environment} from '../../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarrinhoService {\n  baseUrl: string = environment.baseUrl;\n\n  constructor(private http: HttpClient) {\n  }\n\n  obtemCarrinho(): Observable<Ingrediente[]> {\n    const url = `${this.baseUrl}/chart`;\n    return this.http.get<Ingrediente[]>(url);\n  }\n\n  adicionarAoCarrinho(carrinho: Ingrediente) {\n    const url = `${this.baseUrl}/chart`;\n    return this.http.post<Ingrediente>(url, carrinho);\n  }\n  adicionarAoCarrinhoP(carrinho: Promocao) {\n    const url = `${this.baseUrl}/chart`;\n    return this.http.post<Promocao>(url, carrinho);\n  }\n\n\n  removerCarrinho(id: number) {\n    const url = `${this.baseUrl}/chart${id}`;\n    return this.http.delete<void>(url);\n  }\n\n  limparCarrinho() {\n\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Usuario} from '../../models/usuario';\nimport {Router} from '@angular/router';\nimport {environment} from '../../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, tap} from 'rxjs/operators';\nimport {throwError} from 'rxjs';\nimport jwt_decode from 'jwt-decode';\nimport {CookieService} from 'ngx-cookie-service';\nimport {UserToken} from '../../models/user-token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  mostrarMenu = new EventEmitter<boolean>();\n  token = '';\n\n  constructor(private router: Router, private http: HttpClient, private cookieService: CookieService) {\n  }\n\n  baseUrl: string = environment.baseUrl;\n\n  estaAutenticado(): boolean {\n    return !!this.getToken();\n  }\n\n  eadm(): boolean {\n    return !!this.cookieService.get('eadm');\n  }\n\n  logar(usuario: Usuario) {\n    const url = `${this.baseUrl}/login`;\n    return this.http.post<Usuario>(url, usuario).pipe(\n      tap(token => {\n        this.token = JSON.parse(JSON.stringify(token));\n        const decode = jwt_decode(this.token) as UserToken;\n        // console.log(this.token);\n        this.cookieService.set('access-token', `${token}`, decode.exp);\n        this.router.navigate(['/']);\n        if (decode.role === 'admin') {\n          this.mostrarMenu.emit(this.estaAutenticado());\n          this.cookieService.set('eadm', decode.role);\n        }\n        if (decode.role === 'user') {\n          this.mostrarMenu.emit(this.estaAutenticado());\n        }\n\n      }),\n      catchError((err) => {\n        return throwError(err);\n      })\n    )\n      .subscribe();\n\n  }\n\n  public getToken(): string {\n    return this.cookieService.get('access-token');\n  }\n\n  public decodePayloadJWT(token: string): Usuario {\n    try {\n      const decode = jwt_decode(token) as UserToken;\n      return {\n        id: decode.id,\n        login: decode.name,\n        role: decode.role,\n      } as Usuario;\n    } catch (Error) {\n      return null;\n    }\n  }\n\n  logout() {\n    this.cookieService.delete('access-token');\n    this.cookieService.delete('eadm');\n    this.mostrarMenu.emit(false);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../../../environments/environment';\nimport {Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\nimport {CookieService} from 'ngx-cookie-service';\nimport {Ingrediente} from '../../models/produto';\nimport {Usuario} from '../../models/usuario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CadastroService {\n  baseUrl: string = environment.baseUrl;\n\n  constructor(private router: Router, private http: HttpClient, private cookieService: CookieService) {\n  }\n\n  getLogin() {\n    const url = `${this.baseUrl}/user/info`;\n    return this.http.get<Usuario[]>(url);\n  }\n\n  postLogin(usuario: Usuario) {\n    const url = `${this.baseUrl}/user`;\n    return this.http.post<Ingrediente>(url, usuario);\n  }\n\n  postLoginAdm(adm: Usuario) {\n    const url = `${this.baseUrl}/user/admin`;\n    return this.http.post<Ingrediente>(url, adm);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Ingrediente, Produto, Promocao} from '../../models/produto';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../../environments/environment';\nimport {Usuario} from '../../models/usuario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n  baseUrl: string = environment.baseUrl;\n  produtos: Produto[] = [];\n  ingredientes: Ingrediente[] = [];\n  promocoes: Promocao[] = [];\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  postProduto(produtos: Ingrediente) {\n    const url = `${this.baseUrl}/ingredients`;\n    return this.http.post<Ingrediente>(url, produtos);\n  }\n\n  postProdutoLista(produtos: Produto) {\n    const url = `${this.baseUrl}/categories`;\n    return this.http.post<Produto>(url, produtos);\n  }\n\n  postPromocoes(produtos: Promocao) {\n    const url = `${this.baseUrl}/offers`;\n    return this.http.post<Promocao>(url, produtos);\n  }\n\n  getProdutoById(id: string) {\n    const url = `${this.baseUrl}/categories${id}`;\n    return this.http.get<Produto>(url);\n  }\n\n  getIngredienteById(id: string) {\n    const url = `${this.baseUrl}/ingredients${id}`;\n    return this.http.get<Ingrediente>(url);\n  }\n\n  getPromocaoById(id: string) {\n    const url = `${this.baseUrl}/offers${id}`;\n    return this.http.get<Promocao>(url);\n  }\n\n  getProdutosLista(): Observable<Produto[]> {\n    const url = `${this.baseUrl}/categories/`;\n    return this.http.get<Produto[]>(url);\n  }\n\n  getPromocoes(): Observable<Promocao[]> {\n    const url = `${this.baseUrl}/offers/`;\n    return this.http.get<Promocao[]>(url);\n  }\n\n  getIngrediente(id: number): Observable<Ingrediente> {\n    const url = `${this.baseUrl}/ingredients/`;\n    return this.http.get<Ingrediente>(url);\n  }\n\n  deleteProdutoLista(id: number) {\n    const url = `${this.baseUrl}/categories/${id}`;\n    return this.http.delete<void>(url);\n  }\n\n  deleteIngredientes(id: number) {\n    return this.ingredientes.filter(produto => produto.id !== id);\n  }\n\n  deletePromocoes(id: number) {\n    return this.promocoes.filter(produto => produto.id !== id);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n  <div class=\"footer__container \">\n    <section>\n<!--   um texto sobre a empresa   -->\n<!--   o texto e do um lipsum generator q gera texto automaticamente   -->\n      <h2 class=\"footer__title\">sobre</h2>\n      <p class=\"footer__about-text\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non libero viverra, gravida lorem ut, hendrerit\n        augue. Vivamus laoreet leo non aliquam gravida. Donec facilisis libero ex, quis tristique elit eleifend et.\n        Quisque\n      </p>\n    </section>\n<!--  parte sobre como obter contato com a empresa  -->\n    <address>\n      <h2 class=\"footer__title ms-4\">contato</h2>\n      <ul>\n        <li><i class=\"fa-sharp fa-solid fa-envelope\"></i> email@email.com</li>\n        <li><i class=\"fa-solid fa-phone\"></i> (00) 000-000</li>\n        <li><i class=\"fa-brands fa-whatsapp\"></i> (00) 000-000</li>\n      </ul>\n    </address>\n  </div>\n\n</footer>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../service/service_login/auth.service';\n\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Usuario} from '../../models/usuario';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  mudar = false;\n  eAdm = this.authService.eadm();\n  formBuscarProduto: FormGroup;\n  usuario: Usuario;\n\n  aparecerMenu() {\n    const btn: HTMLElement = document.getElementById('btn-mobile') as HTMLElement;\n    if (!this.mudar) {\n      btn.innerHTML = '<i class=\"fa-solid fa-xmark p-1\" ></i>';\n      this.mudar = true;\n    } else {\n      btn.innerHTML = '<i class=\"fa-solid fa-bars p-1\"></i>';\n      this.mudar = false;\n    }\n  }\n\n  // mudar apos o http\n  nome() {\n    if (this.eAdm) {\n      return 'Adm';\n    }\n    return 'weu';\n  }\n\n  constructor(private route: Router, private authService: AuthService, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.authService.mostrarMenu.subscribe(\n      mostrar => this.eAdm = mostrar\n    );\n    this.createForm();\n  }\n\n  createForm() {\n    this.formBuscarProduto = this.fb.group({\n      nome: ['', [Validators.required]],\n    });\n  }\n\n\n  sair() {\n    alert('saindo...');\n    this.authService.logout();\n    this.route.navigate(['login']);\n  }\n\n  sumirMenu() {\n    const btn: HTMLElement = document.getElementById('btn-mobile') as HTMLElement;\n    if (this.mudar) {\n      btn.innerHTML = '<i class=\"fa-solid fa-bars p-1\"></i>';\n      this.mudar = false;\n    }\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg nav-bg\">\n  <div class=\"container-fluid\">\n    <button (click)=\"aparecerMenu()\" class=\"navbar-toggler botao \" type=\"button\" data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\" id=\"btn-mobile\">\n      <i class=\"fa-solid fa-bars p-1\"></i>\n    </button>\n\n\n    <!--    menu   -->\n    <div class=\"collapse navbar-collapse nav_menu-principal\" id=\"navbarSupportedContent\" (click)=\"sumirMenu()\">\n      <img src=\"/assets/img/logo.png\" alt=\"foto de hamburgue gostoso\" width=\"100\" height=\"100\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"produtos-categorias\">Produtos</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"promocoes\">Promoções</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"comprar\">Carrinho</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"adicionar-produto\" *ngIf=\"eAdm\">Adicionar produto</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"adicionar-promocao\" *ngIf=\"eAdm\">Adicionar promoção</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"adicionar-ingredientes\" *ngIf=\"eAdm\">Adicionar ingrediente</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"historico-vendas\" *ngIf=\"eAdm\">Historico de vendas</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"registrar\" *ngIf=\"eAdm\">Registro</a>\n        </li>\n\n      </ul>\n\n\n    </div>\n    <div class=\"align-content-between d-flex\">\n      <p class=\"mx-4 my-auto\">Bem vindo {{nome()}}</p>\n      <button class=\"btn botao \" (click)=\"sair()\">Sair<i class=\"fa-solid fa-arrow-right-from-bracket ms-2\"></i>\n      </button>\n\n    </div>\n\n\n  </div>\n</nav>\n\n<div class=\"d-flex flex-column nav-bg nav-mobile\" *ngIf=\"mudar\" (click)=\"sumirMenu()\">\n  <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n    <li class=\"nav-item \">\n      <a class=\"nav-link mx-2 nav-first\" routerLink=\"produtos-categorias\">Produtos</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"promocoes\">Promoções</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"comprar\">Carrinho</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"adicionar-produto\" *ngIf=\"eAdm\">Adicionar produto</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"adicionar-ingredientes\" *ngIf=\"eAdm\">Adicionar ingrediente</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"adicionar-promocao\" *ngIf=\"eAdm\">Adicionar promoção</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"historico-vendas\" *ngIf=\"eAdm\">Historico de vendas</a>\n    </li>\n\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"registrar\" *ngIf=\"eAdm\">Registro</a>\n    </li>\n  </ul>\n\n</div>\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // baseUrl: 'https://pweb-production.up.railway.app'\n  baseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}