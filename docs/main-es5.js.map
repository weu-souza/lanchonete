{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/paths/Main/adicionar-ingrediente/adicionar-ingrediente.component.ts","webpack:///src/app/paths/Main/adicionar-ingrediente/adicionar-ingrediente.component.html","webpack:///src/app/paths/Main/adicionar-produto/adicionar-produto.component.ts","webpack:///src/app/paths/Main/adicionar-produto/adicionar-produto.component.html","webpack:///src/app/paths/Main/adicionar-promocao/adicionar-promocao.component.ts","webpack:///src/app/paths/Main/adicionar-promocao/adicionar-promocao.component.html","webpack:///src/app/paths/Main/alterar-ingrediente/alterar-ingrediente.component.ts","webpack:///src/app/paths/Main/alterar-ingrediente/alterar-ingrediente.component.html","webpack:///src/app/paths/Main/alterar-produto/alterar-produto.component.ts","webpack:///src/app/paths/Main/alterar-produto/alterar-produto.component.html","webpack:///src/app/paths/Main/carrinho/comprar.component.ts","webpack:///src/app/paths/Main/carrinho/comprar.component.html","webpack:///src/app/paths/Main/historico-vendas/historico-vendas.component.ts","webpack:///src/app/paths/Main/historico-vendas/historico-vendas.component.html","webpack:///src/app/paths/Main/produtos/produtoss.component.ts","webpack:///src/app/paths/Main/produtos/produtoss.component.html","webpack:///src/app/paths/Main/promocoes/promocoes.component.ts","webpack:///src/app/paths/Main/promocoes/promocoes.component.html","webpack:///src/app/paths/login/guard/admGuard/guard-adm.guard.ts","webpack:///src/app/paths/login/guard/auth.guard.ts","webpack:///src/app/paths/login/interceptors/token.interceptor.ts","webpack:///src/app/paths/login/login.component.ts","webpack:///src/app/paths/login/login.component.html","webpack:///src/app/paths/login/nao-logado/nao-logado.component.ts","webpack:///src/app/paths/login/nao-logado/nao-logado.component.html","webpack:///src/app/paths/login/registro/registro.component.ts","webpack:///src/app/paths/login/registro/registro.component.html","webpack:///src/app/paths/models/produto.ts","webpack:///src/app/paths/models/usuario.ts","webpack:///src/app/paths/nao-encontrada/nao-encontrada.component.ts","webpack:///src/app/paths/nao-encontrada/nao-encontrada.component.html","webpack:///src/app/paths/service/service_carrinho/carrinho.service.ts","webpack:///src/app/paths/service/service_login/auth.service.ts","webpack:///src/app/paths/service/service_login/cadastro.service.ts","webpack:///src/app/paths/service/service_produto/produto.service.ts","webpack:///src/app/paths/template/footer/footer.component.ts","webpack:///src/app/paths/template/footer/footer.component.html","webpack:///src/app/paths/template/header/header.component.ts","webpack:///src/app/paths/template/header/header.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","loadChildren","m","ProdutosCategoriaModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","authService","mostrarMenu","estaAutenticado","title","subscribe","mostrar","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AdicionarIngredienteComponent","fb","produtoService","fotoSrc","mostrarTexto","createForm","formAddProduto","group","name","required","imageName","price","min","ingredients","event","span","document","getElementById","inputTarget","target","file","files","reader","FileReader","addEventListener","readerTarget","style","border","background","String","result","value","readAsDataURL","dirty","valid","produto","Object","assign","postProduto","res","alert","console","log","imagem","addProduto","AdicionarProdutoComponent","postProdutoLista","enviar","AdicionarPromocaoComponent","details","promocao","postPromocoes","addPromocao","AlterarIngredienteComponent","nome","preco","ingredientes","atualizarProduto","atualizarPromocao","AlterarProdutoComponent","atualizar","ComprarComponent","route","carrinhoService","total","getCarrinho","produtos$","obtemCarrinho","pipe","error","message","removerCarrinho","limparCarrinho","navigate","HistoricoVendasComponent","remover","ProdutossComponent","carrinhoS","eAdm","getIngredientes","getIngrediente","adicionarAoCarrinho","produtos","PromocoesComponent","getPromocoes","adicionarAoCarrinhoP","deletePromocoes","GuardAdmGuard","next","state","eadm","providedIn","AuthGuard","TokenInterceptor","request","token","getToken","clone","setHeaders","Authorization","withCredentials","handle","LoginComponent","setTimeout","logout","formLogin","login","password","usuario","logar","registrar","NaoLogadoComponent","loginService","RegistroComponent","cadastroService","mostrarBtn","formRegistro","minLength","postLogin","postLoginAdm","Produto","Ingrediente","Promocao","Usuario","NaoEncontradaComponent","CarrinhoService","http","baseUrl","url","get","carrinho","post","AuthService","router","cookieService","JSON","parse","stringify","decode","set","exp","role","emit","err","CadastroService","adm","ProdutoService","promocoes","filter","FooterComponent","HeaderComponent","mudar","btn","innerHTML","getLogin","formBuscarProduto","aparecerMenu","sumirMenu","sair","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PromocoesComponent} from './paths/Main/promocoes/promocoes.component';\nimport {AdicionarProdutoComponent} from './paths/Main/adicionar-produto/adicionar-produto.component';\nimport {HistoricoVendasComponent} from './paths/Main/historico-vendas/historico-vendas.component';\nimport {AdicionarIngredienteComponent} from './paths/Main/adicionar-ingrediente/adicionar-ingrediente.component';\nimport {NaoEncontradaComponent} from './paths/nao-encontrada/nao-encontrada.component';\nimport {ComprarComponent} from './paths/Main/carrinho/comprar.component';\nimport {LoginComponent} from './paths/login/login.component';\nimport {RegistroComponent} from './paths/login/registro/registro.component';\nimport {AuthGuard} from './paths/login/guard/auth.guard';\nimport {GuardAdmGuard} from './paths/login/guard/admGuard/guard-adm.guard';\nimport {ProdutossComponent} from './paths/Main/produtos/produtoss.component';\nimport {AlterarProdutoComponent} from './paths/Main/alterar-produto/alterar-produto.component';\nimport {AlterarIngredienteComponent} from './paths/Main/alterar-ingrediente/alterar-ingrediente.component';\nimport {AdicionarPromocaoComponent} from './paths/Main/adicionar-promocao/adicionar-promocao.component';\n\n\nconst routes: Routes = [{\n  path: 'produtos-categorias/produtos/:id', component: ProdutossComponent, canActivate: [AuthGuard]\n},\n\n  {\n    path: 'produtos-categorias',\n    loadChildren: () => import('./paths/Main/produtos-categoria/produtos-categoria.module').then(m => m.ProdutosCategoriaModule),\n    canActivate: [AuthGuard]\n  },\n  {path: '', redirectTo: 'produtos-categorias', pathMatch: 'full', canActivate: [AuthGuard]},\n  {path: 'promocoes', component: PromocoesComponent, canActivate: [AuthGuard]},\n  {path: 'adicionar-produto', component: AdicionarProdutoComponent, canActivate: [GuardAdmGuard, AuthGuard]},\n  {path: 'historico-vendas', component: HistoricoVendasComponent, canActivate: [GuardAdmGuard, AuthGuard]},\n  {path: 'adicionar-ingredientes', component: AdicionarIngredienteComponent, canActivate: [GuardAdmGuard, AuthGuard]},\n  {path: 'comprar', component: ComprarComponent, canActivate: [AuthGuard]},\n  {path: 'login', component: LoginComponent},\n  {path: 'registrar', component: RegistroComponent},\n  {path: 'alterar_produto', component: AlterarProdutoComponent},\n  {path: 'alterar_ingrediente', component: AlterarIngredienteComponent},\n  {path: 'adicionar-promocao', component: AdicionarPromocaoComponent},\n  {path: '**', component: NaoEncontradaComponent}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\nimport {AuthService} from './paths/service/service_login/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  mostrarMenu = this.authService.estaAutenticado();\n  title = 'lanchonete';\n\n  constructor(private authService: AuthService) {\n  }\n\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngOnInit() {\n    this.authService.mostrarMenu.subscribe(\n      mostrar => this.mostrarMenu = mostrar\n    );\n  }\n}\n","<ng-template #naologado class=\"d-grid\"><app-nao-logado></app-nao-logado></ng-template>\n<section class=\"bg-container\">\n  <app-header *ngIf=\"mostrarMenu else naologado \" class=\"\"></app-header>\n\n\n  <div\n    class=\"container-app  py-5 justify-content-around me-lg-auto ms-lg-5 me-md-auto ms-md-2 me-sm-auto me-sm-2 \">\n    <router-outlet></router-outlet>\n  </div>\n\n  <div  class=\" footer-container\">\n    <app-footer></app-footer>\n  </div>\n</section>\n\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HeaderComponent} from './paths/template/header/header.component';\nimport {FooterComponent} from './paths/template/footer/footer.component';\nimport {LoginComponent} from './paths/login/login.component';\nimport {RegistroComponent} from './paths/login/registro/registro.component';\nimport {PromocoesComponent} from './paths/Main/promocoes/promocoes.component';\nimport {AdicionarProdutoComponent} from './paths/Main/adicionar-produto/adicionar-produto.component';\nimport {HistoricoVendasComponent} from './paths/Main/historico-vendas/historico-vendas.component';\nimport {AdicionarIngredienteComponent} from './paths/Main/adicionar-ingrediente/adicionar-ingrediente.component';\nimport {NaoEncontradaComponent} from './paths/nao-encontrada/nao-encontrada.component';\nimport {ComprarComponent} from './paths/Main/carrinho/comprar.component';\nimport {AuthService} from './paths/service/service_login/auth.service';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NaoLogadoComponent} from './paths/login/nao-logado/nao-logado.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {ProdutossComponent} from './paths/Main/produtos/produtoss.component';\nimport {AlterarProdutoComponent} from './paths/Main/alterar-produto/alterar-produto.component';\nimport {AlterarIngredienteComponent} from './paths/Main/alterar-ingrediente/alterar-ingrediente.component';\nimport {TokenInterceptor} from './paths/login/interceptors/token.interceptor';\nimport { AdicionarPromocaoComponent } from './paths/Main/adicionar-promocao/adicionar-promocao.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    RegistroComponent,\n    PromocoesComponent,\n    AdicionarProdutoComponent,\n    HistoricoVendasComponent,\n    AdicionarIngredienteComponent,\n    NaoEncontradaComponent,\n    ComprarComponent,\n    NaoLogadoComponent,\n    ProdutossComponent,\n    AlterarProdutoComponent,\n    AlterarIngredienteComponent,\n    AdicionarPromocaoComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n\n\n  ],\n  providers: [\n    {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  },\n    AuthService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Ingrediente, Produto, Promocao} from '../../models/produto';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\n\n@Component({\n  selector: 'app-adicionar-ingrediente',\n  templateUrl: './adicionar-ingrediente.component.html',\n  styleUrls: ['./adicionar-ingrediente.component.scss']\n})\nexport class AdicionarIngredienteComponent implements OnInit {\n\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  produto: Ingrediente;\n  fotoSrc = '';\n  mostrarTexto = true;\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      name: ['', [Validators.required]],\n      imageName: ['', [Validators.required]],\n      price: ['', [Validators.required, Validators.min(1)]],\n      ingredients: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        // this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.mostrarTexto = false;\n        this.fotoSrc = String(readerTarget.result);\n        this.formAddProduto.value.imageName = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  addProduto() {\n    if (this.formAddProduto.dirty && this.formAddProduto.valid) {\n      this.produto = Object.assign({}, this.produto, this.formAddProduto.value);\n      this.produtoService.postProduto(this.produto).subscribe(res => {\n        alert('enviado com sucesso!');\n      });\n      console.log('produto adicionada', this.produto);\n    } else {\n      alert('preencha o formulario!');\n    }\n\n  }\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Adicionar itens</h1>\n  </div>\n  <!--    nome do produto -->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"produto\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control \" id=\"produto\" placeholder=\"nome do produto\" formControlName=\"name\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty), 'is-valid':formAddProduto.controls['name'].valid} \"\n\n           [class.valid]=\"formAddProduto.controls['name'].valid\"\n           [class.invalid]=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['name'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    preço do produto -->\n    <label for=\"preco\" class=\"form-label\">preço </label>\n    <input type=\"number\" class=\"form-control\" id=\"preco\" placeholder=\"R$ 00,00\" formControlName=\"price\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty), 'is-valid':formAddProduto.controls['price'].valid} \"\n           [class.valid]=\"formAddProduto.controls['price'].valid\"\n           [class.invalid]=\"formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty)\">\n\n    <div *ngIf=\"formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty)\">\n\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['price'].hasError('required')\">\n        Esse campo precisa ser preenchido com números.\n      </small>\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['price'].hasError('min')\">\n        Esse campo precisa ser maior que 00,00.\n      </small>\n    </div>\n  </div>\n\n  <!--ingredientes do produto-->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"texto\" class=\"form-label \">ingredientes</label>\n    <textarea class=\"form-control \" id=\"texto\" placeholder=\"digite o ingrediente...\" formControlName=\"ingredients\"\n              [ngClass]=\"{'is-invalid': formAddProduto.controls['ingredients'].invalid &&\n           (formAddProduto.controls['ingredients'].touched || formAddProduto.controls['ingredients'].dirty), 'is-valid':formAddProduto.controls['ingredients'].valid}\"\n              [class.valid]=\"formAddProduto.controls['ingredients'].valid\"\n              [class.invalid]=\"formAddProduto.controls['ingredients'].invalid &&\n           (formAddProduto.controls['ingredients'].touched || formAddProduto.controls['ingredients'].dirty)\"></textarea>\n\n    <div *ngIf=\"formAddProduto.controls['ingredients'].invalid &&\n           (formAddProduto.controls['ingredients'].touched || formAddProduto.controls['ingredients'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['name'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto \">\n    <label for=\"formFile\"  id=\"span_imagem\" class=\"form-label img-label\"><span *ngIf=\"mostrarTexto\">escolha uma imagem</span><img\n      [src]=\"fotoSrc\" class=\" img\"\n     ></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imageName\"\n           [class.valid]=\"formAddProduto.controls['imageName'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imageName'].invalid &&\n           (formAddProduto.controls['imageName'].touched || formAddProduto.controls['imageName'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"d-lg-flex  flex-wrap mx-auto\">\n\n    <div class=\"col-auto ms-lg-3 \">\n      <button type=\"submit\" class=\"btn  mb-3 \" (click)=\"addProduto()\">Adicionar\n        Produto\n      </button>\n    </div>\n  </div>\n\n</form>\n\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Produto} from '../../models/produto';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\n\n\n\n@Component({\n  selector: 'app-contato',\n  templateUrl: './adicionar-produto.component.html',\n  styleUrls: ['./adicionar-produto.component.scss']\n})\nexport class AdicionarProdutoComponent implements OnInit {\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  produto: Produto = new Produto();\n  fotoSrc = '';\n  mostrarTexto = true;\n\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      name: ['', [Validators.required]],\n      imageName: ['', [Validators.required]],\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.mostrarTexto = false;\n        this.fotoSrc = String(readerTarget.result);\n        this.formAddProduto.value.imageName = String(readerTarget.result);\n      });\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  enviar() {\n    if (this.formAddProduto.dirty && this.formAddProduto.valid) {\n      this.produto = Object.assign({}, this.produto, this.formAddProduto.value);\n\n      this.produtoService.postProdutoLista(this.produto).subscribe(res => {\n        alert('enviado com sucesso!');\n      });\n    } else {\n      alert('preencha o formulario!');\n    }\n\n\n  }\n\n  atualizar() {\n    console.log('atualizar', this.formAddProduto.value);\n  }\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Adicionar Lista de produtos</h1>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    nome do produto -->\n    <label for=\"email\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Digite um nome...\" formControlName=\"name\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty), 'is-valid':formAddProduto.controls['name'].valid} \"\n           [class.valid]=\"formAddProduto.controls['name'].valid\"\n           [class.invalid]=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['name'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto\">\n    <label for=\"formFile\" id=\"span_imagem\" class=\"form-label img-label\"><span *ngIf=\"mostrarTexto\">escolha uma imagem</span> <img\n      [src]=\"fotoSrc\" class=\" img\" ></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imageName\"\n           [class.valid]=\"formAddProduto.controls['imageName'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imageName'].invalid &&\n           (formAddProduto.controls['imageName'].touched || formAddProduto.controls['imageName'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"col-auto mx-auto\">\n    <button type=\"submit\" class=\"btn  mb-3\" (click)=\"enviar()\">Enviar</button>\n  </div>\n\n</form>\n\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Ingrediente, Produto, Promocao} from '../../models/produto';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\n\n@Component({\n  selector: 'app-adicionar-promocao',\n  templateUrl: './adicionar-promocao.component.html',\n  styleUrls: ['./adicionar-promocao.component.scss']\n})\nexport class AdicionarPromocaoComponent implements OnInit {\n\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  promocao: Promocao;\n  fotoSrc = '';\n  mostrarTexto = true;\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      name: ['', [Validators.required]],\n      imageName: ['', [Validators.required]],\n      price: ['', [Validators.required, Validators.min(1)]],\n      details: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        // this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.mostrarTexto = false;\n        this.fotoSrc = String(readerTarget.result);\n        this.formAddProduto.value.imageName = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  addPromocao() {\n    if (this.formAddProduto.dirty && this.formAddProduto.valid) {\n      this.promocao = Object.assign({}, this.promocao, this.formAddProduto.value);\n      this.produtoService.postPromocoes(this.promocao).subscribe(res => {\n        alert('enviado com sucesso!');\n      });\n      console.log('promoção adicionada');\n    } else {\n      alert('preencha o formulario!');\n    }\n\n  }\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Adicionar promoção</h1>\n  </div>\n  <!--    nome do produto -->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"produto\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control \" id=\"produto\" placeholder=\"nome do produto\" formControlName=\"name\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty), 'is-valid':formAddProduto.controls['name'].valid} \"\n\n           [class.valid]=\"formAddProduto.controls['name'].valid\"\n           [class.invalid]=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['name'].invalid &&\n           (formAddProduto.controls['name'].touched || formAddProduto.controls['name'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['name'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    preço do produto -->\n    <label for=\"preco\" class=\"form-label\">preço </label>\n    <input type=\"number\" class=\"form-control\" id=\"preco\" placeholder=\"R$ 00,00\" formControlName=\"price\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty), 'is-valid':formAddProduto.controls['price'].valid} \"\n           [class.valid]=\"formAddProduto.controls['price'].valid\"\n           [class.invalid]=\"formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty)\">\n\n    <div *ngIf=\"formAddProduto.controls['price'].invalid &&\n           (formAddProduto.controls['price'].touched || formAddProduto.controls['price'].dirty)\">\n\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['price'].hasError('required')\">\n        Esse campo precisa ser preenchido com números.\n      </small>\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['price'].hasError('min')\">\n        Esse campo precisa ser maior que 00,00.\n      </small>\n    </div>\n  </div>\n\n  <!--ingredientes do produto-->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"texto\" class=\"form-label \">detalhes</label>\n    <textarea class=\"form-control \" id=\"texto\" placeholder=\"digite o detalhe...\" formControlName=\"details\"\n              [ngClass]=\"{'is-invalid': formAddProduto.controls['details'].invalid &&\n           (formAddProduto.controls['details'].touched || formAddProduto.controls['details'].dirty), 'is-valid':formAddProduto.controls['details'].valid}\"\n              [class.valid]=\"formAddProduto.controls['details'].valid\"\n              [class.invalid]=\"formAddProduto.controls['details'].invalid &&\n           (formAddProduto.controls['details'].touched || formAddProduto.controls['details'].dirty)\"></textarea>\n\n    <div *ngIf=\"formAddProduto.controls['details'].invalid &&\n           (formAddProduto.controls['details'].touched || formAddProduto.controls['details'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['name'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto \">\n    <label for=\"formFile\"  id=\"span_imagem\" class=\"form-label img-label\"><span *ngIf=\"mostrarTexto\">escolha uma imagem</span><img\n      [src]=\"fotoSrc\" class=\" img\"\n    ></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imageName\"\n           [class.valid]=\"formAddProduto.controls['imageName'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imageName'].invalid &&\n           (formAddProduto.controls['imageName'].touched || formAddProduto.controls['imageName'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"d-lg-flex  flex-wrap mx-auto\">\n    <div class=\"col-auto   ms-lg-3\">\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"addPromocao()\">Adicionar\n        Promoção\n      </button>\n    </div>\n  </div>\n\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Ingrediente, Produto} from '../../models/produto';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\n\n@Component({\n  selector: 'app-alterar-ingrediente',\n  templateUrl: './alterar-ingrediente.component.html',\n  styleUrls: ['./alterar-ingrediente.component.scss']\n})\nexport class AlterarIngredienteComponent implements OnInit {\n\n\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  produto: Ingrediente = new Ingrediente();\n  produtos: Produto[];\n  fotoSrc = '';\n  mostrarTexto = true;\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      nome: ['', [Validators.required]],\n      imagem: ['', [Validators.required]],\n      preco: ['', [Validators.required, Validators.min(1)]],\n      ingredientes: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.mostrarTexto = false;\n        this.fotoSrc = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n  }\n\n  atualizarPromocao() {\n\n  }\n\n  atualizarProduto() {\n\n  }\n\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">alterar itens</h1>\n  </div>\n  <!--    nome do produto -->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"produto\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control \" id=\"produto\" placeholder=\"nome do produto\" formControlName=\"nome\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty), 'is-valid':formAddProduto.controls['nome'].valid} \"\n\n           [class.valid]=\"formAddProduto.controls['nome'].valid\"\n           [class.invalid]=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['nome'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    preço do produto -->\n    <label for=\"preco\" class=\"form-label\">preço </label>\n    <input type=\"number\" class=\"form-control\" id=\"preco\" placeholder=\"R$ 00,00\" formControlName=\"preco\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['preco'].invalid &&\n           (formAddProduto.controls['preco'].touched || formAddProduto.controls['preco'].dirty), 'is-valid':formAddProduto.controls['preco'].valid} \"\n           [class.valid]=\"formAddProduto.controls['preco'].valid\"\n           [class.invalid]=\"formAddProduto.controls['preco'].invalid &&\n           (formAddProduto.controls['preco'].touched || formAddProduto.controls['preco'].dirty)\">\n\n    <div *ngIf=\"formAddProduto.controls['preco'].invalid &&\n           (formAddProduto.controls['preco'].touched || formAddProduto.controls['preco'].dirty)\">\n\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['preco'].hasError('required')\">\n        Esse campo precisa ser preenchido com números.\n      </small>\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['preco'].hasError('min')\">\n        Esse campo precisa ser maior que 00,00.\n      </small>\n    </div>\n  </div>\n\n  <!--ingredientes do produto-->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"texto\" class=\"form-label \">ingredientes</label>\n    <textarea class=\"form-control \" id=\"texto\" placeholder=\"digite o ingrediente...\" formControlName=\"ingredientes\"\n              [ngClass]=\"{'is-invalid': formAddProduto.controls['ingredientes'].invalid &&\n           (formAddProduto.controls['ingredientes'].touched || formAddProduto.controls['ingredientes'].dirty), 'is-valid':formAddProduto.controls['ingredientes'].valid}\"\n              [class.valid]=\"formAddProduto.controls['ingredientes'].valid\"\n              [class.invalid]=\"formAddProduto.controls['ingredientes'].invalid &&\n           (formAddProduto.controls['ingredientes'].touched || formAddProduto.controls['ingredientes'].dirty)\"></textarea>\n\n    <div *ngIf=\"formAddProduto.controls['ingredientes'].invalid &&\n           (formAddProduto.controls['ingredientes'].touched || formAddProduto.controls['ingredientes'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['nome'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto \">\n    <label for=\"formFile\"  id=\"span_imagem\" class=\"form-label img-label\"><span *ngIf=\"mostrarTexto\">escolha uma imagem</span><img\n      [src]=\"fotoSrc\" class=\" img\"\n    ></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imagem\"\n           [class.valid]=\"formAddProduto.controls['imagem'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imagem'].invalid &&\n           (formAddProduto.controls['imagem'].touched || formAddProduto.controls['imagem'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"d-lg-flex  flex-wrap mx-auto\">\n    <div class=\"col-auto  ms-lg-3\">\n      <button type=\"submit\" class=\"btn  mb-3 \" (click)=\"atualizarProduto()\">\n        Atualizar\n        Produto\n      </button>\n    </div>\n\n    <div class=\"col-auto ms-lg-3 \">\n      <button type=\"submit\" class=\"btn  mb-3 \" (click)=\"atualizarPromocao()\">Atualizar\n        Promoção\n      </button>\n    </div>\n\n  </div>\n\n</form>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Produto} from '../../models/produto';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\n\n@Component({\n  selector: 'app-alterar-produto',\n  templateUrl: './alterar-produto.component.html',\n  styleUrls: ['./alterar-produto.component.scss']\n})\nexport class AlterarProdutoComponent implements OnInit {\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  produto: Produto = new Produto();\n  fotoSrc = '';\n  mostrarTexto = true;\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      nome: ['', [Validators.required]],\n      imagem: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.mostrarTexto = false;\n        this.fotoSrc = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n\n  }\n  atualizar() {\n    console.log('atualizar', this.formAddProduto.value);\n  }\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">alterar Lista de produtos</h1>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    nome do produto -->\n    <label for=\"email\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Digite um nome...\" formControlName=\"nome\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty), 'is-valid':formAddProduto.controls['nome'].valid} \"\n           [class.valid]=\"formAddProduto.controls['nome'].valid\"\n           [class.invalid]=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['nome'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto\">\n    <label for=\"formFile\" id=\"span_imagem\" class=\"form-label img-label\"><span *ngIf=\"mostrarTexto\">escolha uma imagem</span> <img\n      [src]=\"fotoSrc\" class=\" img\" ></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imagem\"\n           [class.valid]=\"formAddProduto.controls['imagem'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imagem'].invalid &&\n           (formAddProduto.controls['imagem'].touched || formAddProduto.controls['imagem'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"col-auto mx-auto\">\n    <button type=\"submit\" class=\"btn  mb-3 ms-4\" (click)=\"atualizar()\">Atualizar\n    </button>\n  </div>\n\n</form>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Ingrediente} from '../../models/produto';\nimport {CarrinhoService} from '../../service/service_carrinho/carrinho.service';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-comprar',\n  templateUrl: './comprar.component.html',\n  styleUrls: ['./comprar.component.scss']\n})\nexport class ComprarComponent implements OnInit {\n  produto: Ingrediente;\n  produtos$: Observable<Ingrediente[]>;\n  total = 0;\n\n  constructor(private route: Router, private carrinhoService: CarrinhoService) {\n  }\n\n  ngOnInit(): void {\n    this.getCarrinho();\n  }\n\n  getCarrinho() {\n    console.log(this.produtos$);\n    this.produtos$ = this.carrinhoService.obtemCarrinho()\n      .pipe(\n        catchError(error => {\n          return throwError(error.message);\n        })\n      );\n  }\n\n  // calculaTotal() {\n  //   this.total = this.itensCarrinho.reduce((prev, curr) => prev + (curr.price * this.itensCarrinho.length), 0);\n  // }\n\n  removeProdutoCarrinho(id: number) {\n    this.carrinhoService.removerCarrinho(id);\n    // this.calculaTotal();\n  }\n\n  comprar() {\n    alert('parabéns, você finalizou a sua compra!');\n    this.carrinhoService.limparCarrinho();\n    this.route.navigate(['/']);\n  }\n\n}\n","<section>\n  <div class=\"mx-auto d-flex mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Carrinho</h1>\n  </div>\n<div class=\"d-flex row div-carrinho \">\n\n\n  <ng-container *ngIf=\"produtos$ | async as produtos; else semProduto\">\n    <ul>\n      <li class=\"justify-content-between align-items-center d-flex\" *ngFor=\"let carrinho of produtos\">\n\n        <img [src]=\"carrinho.imageName\">\n        <p>{{carrinho.name}}</p>\n        <p>{{carrinho.price|currency: \"BRL\"}}</p>\n\n\n        <button class=\"remove-button\" (click)=\"removeProdutoCarrinho(carrinho.id)\"><i class=\"fa-solid fa-xmark\"></i>\n        </button>\n      </li>\n\n    </ul>\n    <h2 class=\"cart-total ms-4\">Total:{{total}}</h2>\n    <button class=\"buy-button btn w-auto \" (click)=\"comprar()\">Comprar</button>\n  </ng-container>\n</div>\n\n  <ng-template #semProduto>\n    <div class=\"shimmer\">\n      <div class=\"wrapper\">\n        <div class=\"image-card animate\"></div>\n        <div class=\"stroke animate title\"></div>\n        <div class=\"stroke animate link\"></div>\n        <div class=\"stroke animate description\"></div>\n      </div>\n    </div>\n  </ng-template>\n\n\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-historico-vendas',\n  templateUrl: './historico-vendas.component.html',\n  styleUrls: ['./historico-vendas.component.scss']\n})\nexport class HistoricoVendasComponent implements OnInit {\n  total = 20;\n  preco = 20;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  remover() {\n\n  }\n}\n","<section class=\"tabela\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Historico de vendas</h1>\n  </div>\n  <table class=\"table mx-auto w-75 \">\n    <thead class=\"head-table\">\n    <tr>\n      <th scope=\"col\"></th>\n      <th scope=\"col\">nome</th>\n      <th scope=\"col\">produto comprado</th>\n      <th scope=\"col\">preço</th>\n    </tr>\n    </thead>\n    <tbody class=\"tbody-table\">\n    <tr>\n      <th scope=\"row\">1</th>\n      <td class=\"tabela\">Mark</td>\n      <td class=\"tabela\">hamburguer</td>\n      <td class=\"tabela\">{{preco | currency:\"BRL\"}}</td>\n      <td class=\"border-0\"><button class=\"btn remove-button \" (click)=\"remover()\"><i class=\"fa-solid fa-xmark\"></i></button></td>\n    </tr>\n    </tbody>\n    <tfoot>\n    <tr>\n      <th scope=\"col\">total</th>\n      <td rowspan=\"3\" class=\"tabela \">{{total | currency:\"BRL\"}}</td>\n    </tr>\n\n    </tfoot>\n  </table>\n</section>\n\n","import {Component, OnInit} from '@angular/core';\nimport {Ingrediente, Produto} from '../../models/produto';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from '../../service/service_login/auth.service';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\nimport {CarrinhoService} from '../../service/service_carrinho/carrinho.service';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-produtoss',\n  templateUrl: './produtoss.component.html',\n  styleUrls: ['./produtoss.component.scss']\n})\nexport class ProdutossComponent implements OnInit {\n  eAdm = this.authService.estaAutenticado();\n  produtos: Ingrediente;\n  produtos$: Observable<Ingrediente[]>;\n  id = 1;\n\n  constructor(\n    private route: Router,\n    private authService: AuthService,\n    private produtoService: ProdutoService,\n    private carrinhoS: CarrinhoService) {\n  }\n\n  ngOnInit(): void {\n    this.getIngredientes(this.id);\n  }\n\n  getIngredientes(id: number) {\n    this.produtos$ =\n      this.produtoService.getIngrediente(id).pipe(\n        catchError(error => {\n          // this.route.navigateByUrl('/error');\n          // alert('Problemas no server tente novamente mais tarde.');\n          return throwError(error);\n        })\n      );\n  }\n\n  comprar() {\n    this.carrinhoS.adicionarAoCarrinho(this.produtos).subscribe(res => {\n      this.route.navigate(['carrinho']);\n      alert('enviado com sucesso!');\n    });\n  }\n\n  remover(id: number) {\n\n\n  }\n\n  atualizar() {\n    this.route.navigate(['alterar_ingrediente']);\n  }\n}\n","\n\n<div class=\"row row-cols-1 row-cols-md-2 g-4 w-100\">\n  <!--inserir as variaveis aqui-->\n  <ng-container *ngIf=\"produtos$ | async as produtos; else loading\" >\n  <div class=\"card card-container p-2 ms-5 \" *ngFor=\"let produto of produtos\">\n    <img [src]=\"produto?.imageName\" class=\"card-img-top img-fluid\" alt=\"...\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{produto?.name}}</h5>\n      <p class=\"card-text\">{{produto?.ingredients}}</p>\n      <p class=\"card-text\">{{produto?.price | currency: 'BRL'}}</p>\n      <div class=\"d-flex justify-content-between\">\n        <a class=\"btn btn-card\" (click)=\"comprar()\">Comprar</a>\n        <button class=\"btn remove-button\" (click)=\"remover(produto.id)\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-xmark\"></i></button>\n        <button class=\"btn remove-button\" (click)=\"atualizar()\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-pen-to-square\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n  </ng-container>\n</div>\n\n\n<ng-template #loading >\n  <div class=\"card_ p-2 ms-5\">\n    <div class=\"shimmerBG media\"></div>\n    <div class=\"p-32\">\n      <div class=\"shimmerBG title-line\"></div>\n      <div class=\"shimmerBG title-line end\"></div>\n\n      <div class=\"shimmerBG content-line m-t-24\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line end\"></div>\n    </div>\n  </div>\n\n  <div class=\"card_ p-2 ms-5\">\n    <div class=\"shimmerBG media\"></div>\n    <div class=\"p-32\">\n      <div class=\"shimmerBG title-line\"></div>\n      <div class=\"shimmerBG title-line end\"></div>\n\n      <div class=\"shimmerBG content-line m-t-24\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line end\"></div>\n    </div>\n  </div>\n\n  <div class=\"card_ p-2 ms-5\">\n    <div class=\"shimmerBG media\"></div>\n    <div class=\"p-32\">\n      <div class=\"shimmerBG title-line\"></div>\n      <div class=\"shimmerBG title-line end\"></div>\n\n      <div class=\"shimmerBG content-line m-t-24\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line\"></div>\n      <div class=\"shimmerBG content-line end\"></div>\n    </div>\n  </div>\n</ng-template>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../service/service_login/auth.service';\nimport {ProdutoService} from '../../service/service_produto/produto.service';\nimport {Promocao} from '../../models/produto';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {CarrinhoService} from '../../service/service_carrinho/carrinho.service';\n\n@Component({\n  selector: 'app-promocoes',\n  templateUrl: './promocoes.component.html',\n  styleUrls: ['./promocoes.component.scss']\n})\nexport class PromocoesComponent implements OnInit {\n  eAdm = this.authService.estaAutenticado();\n  produtos$: Observable<Promocao[]>;\n  produto: Promocao = new Promocao();\n\n  constructor(private route: Router, private authService: AuthService, private produtoService: ProdutoService,\n              private carrinhoS: CarrinhoService) {\n  }\n\n  ngOnInit(): void {\n    this.getPromocoes();\n  }\n\n  getPromocoes() {\n    this.produtos$ = this.produtoService.getPromocoes().pipe(\n      catchError(error => {\n        return throwError(error);\n      })\n    );\n  }\n\n  comprar() {\n    this.carrinhoS.adicionarAoCarrinhoP(this.produto).subscribe(res => {\n      this.route.navigate(['carrinho']);\n      alert('enviado com sucesso!');\n    });\n  }\n\n  remover(id: number) {\n    // this.produtos = this.produtos.filter(produtos => produtos.id !== id);\n    this.produtoService.deletePromocoes(this.produto.id);\n  }\n\n  atualizar() {\n    this.route.navigate(['alterar_ingrediente']);\n  }\n}\n"," <div class=\"row row-cols-auto  row-cols-md-2 g-4 w-100 \">\n    <!--inserir as variaveis aqui-->\n   <ng-container *ngIf=\"produtos$ | async as produtos; else loading\" >\n    <div class=\"d-flex flex-column  card card-container p-2 ms-5 \" *ngFor=\"let produto of produtos\">\n      <div >\n        <img [src]=\"produto?.imageName\" class=\"card-img-top img-fluid w-100\" alt=\"...\" width=\"400\" height=\"300\">\n      </div>\n\n      <div class=\"card-body \">\n        <div>\n          <h5 class=\"card-title \">{{produto?.name}}</h5>\n        </div>\n       <div>\n         <p class=\"card-text\">{{produto?.details}}</p>\n       </div>\n\n        <div>\n          <p class=\"card-text\">{{produto?.price | currency: \"BRL\"}}</p>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <div><button class=\"btn btn-card\" (click)=\"comprar()\">Comprar</button></div>\n        <div><button class=\"btn remove-button\" (click)=\"remover(produto.id)\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-xmark\"></i></button></div>\n        <div><button class=\"btn remove-button\" (click)=\"atualizar()\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-pen-to-square\"></i></button></div>\n      </div>\n\n    </div>\n   </ng-container>\n\n  </div>\n\n <ng-template #loading >\n   <div class=\"card_ p-2 ms-5\">\n     <div class=\"shimmerBG media\"></div>\n     <div class=\"p-32\">\n       <div class=\"shimmerBG title-line\"></div>\n       <div class=\"shimmerBG title-line end\"></div>\n\n       <div class=\"shimmerBG content-line m-t-24\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line end\"></div>\n     </div>\n   </div>\n\n   <div class=\"card_ p-2 ms-5\">\n     <div class=\"shimmerBG media\"></div>\n     <div class=\"p-32\">\n       <div class=\"shimmerBG title-line\"></div>\n       <div class=\"shimmerBG title-line end\"></div>\n\n       <div class=\"shimmerBG content-line m-t-24\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line end\"></div>\n     </div>\n   </div>\n\n   <div class=\"card_ p-2 ms-5\">\n     <div class=\"shimmerBG media\"></div>\n     <div class=\"p-32\">\n       <div class=\"shimmerBG title-line\"></div>\n       <div class=\"shimmerBG title-line end\"></div>\n\n       <div class=\"shimmerBG content-line m-t-24\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line\"></div>\n       <div class=\"shimmerBG content-line end\"></div>\n     </div>\n   </div>\n </ng-template>\n\n\n\n\n\n\n\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../../../service/service_login/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuardAdmGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.authService.eadm()) {\n      this.route.navigate(['nao-encontrada']);\n      return false;\n    }\n    return true;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../../service/service_login/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {\n  }\n\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.authService.estaAutenticado()) {\n      this.route.navigate(['login']);\n    }\n    return true;\n\n\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../../service/service_login/auth.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {\n  }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = this.authService.getToken();\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `bearer ${token}`\n\n        },\n        withCredentials: true\n      });\n      console.log(request);\n    }\n    return next.handle(request);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../service/service_login/auth.service';\nimport {Usuario} from '../models/usuario';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CookieService} from 'ngx-cookie-service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  formLogin: FormGroup;\n  usuario: Usuario;\n\n\n  constructor(private route: Router, public authService: AuthService, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n\n    setTimeout(() => {\n      console.log('tempo de login expirado');\n      this.authService.logout();\n      this.route.navigate(['login']);\n\n    }, 1000 * 1800);\n  }\n\n  createForm() {\n    this.formLogin = this.fb.group({\n      login: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  logar() {\n    // if (this.formLogin.dirty && this.formLogin.valid) {\n    //   this.usuario = Object.assign({}, this.usuario, this.formLogin.value);\n    //   if (this.authService.login(this.usuario)) {\n    //     this.route.navigate(['/']);\n    //     return;\n    //   }\n    // }\n\n    if (this.formLogin.dirty && this.formLogin.valid) {\n      this.usuario = Object.assign({}, this.usuario, this.formLogin.value);\n      // console.log(this.usuario);\n      this.authService.logar(this.usuario);\n      this.route.navigate(['/']);\n\n    } else {\n      alert('preencha o formulario!');\n    }\n  }\n\n  registrar() {\n    // apos fazer o http vou mudar\n    this.route.navigate(['registrar']);\n  }\n}\n","<form class=\"login-bg p-5 rounded d-grid\" [formGroup]=\"formLogin\" (ngSubmit)=\"logar()\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-login mb-3 mx-auto\">Login</h1>\n  </div>\n  <div class=\"mb-3 d-grid mx-auto mb-3 div-input\">\n    <!--    login -->\n    <label for=\"login\" class=\"col-sm-2 col-form-label\">login</label>\n    <input type=\"text\" class=\"form-control\" id=\"login\"\n           [ngClass]=\"{'is-invalid': formLogin.controls['login'].invalid &&\n           (formLogin.controls['login'].touched || formLogin.controls['login'].dirty), 'is-valid':formLogin.controls['login'].valid} \"\n           placeholder=\"login\"\n           formControlName=\"login\"\n           [class.valid]=\"formLogin.controls['login'].valid\"\n           [class.invalid]=\"formLogin.controls['login'].invalid &&\n(formLogin.controls['login'].touched || formLogin.controls['login'].dirty)\">\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-4 div-input\">\n    <!--   password -->\n    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">senha</label>\n    <input type=\"password\" class=\"form-control\" id=\"inputPassword\"\n           placeholder=\"senha\"\n           [ngClass]=\"{'is-invalid': formLogin.controls['password'].invalid &&\n           (formLogin.controls['password'].touched || formLogin.controls['password'].dirty), 'is-valid':formLogin.controls['password'].valid} \"\n           formControlName=\"password\" [class.valid]=\"formLogin.controls['password'].valid\"\n           [class.invalid]=\"formLogin.controls['password'].invalid &&\n(formLogin.controls['password'].touched || formLogin.controls['password'].dirty)\">\n  </div>\n\n  <div class=\"d-flex mx-auto my-5\">\n    <div class=\"col-auto \">\n      <input type=\"submit\" class=\"btn  mb-3 botao\" value=\"login\" [disabled]=\"!formLogin.valid\">\n    </div>\n    <div class=\"col-auto ms-3\">\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"registrar()\">registrar</button>\n    </div>\n  </div>\n</form>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {LoginComponent} from '../login.component';\nimport {AuthService} from '../../service/service_login/auth.service';\n\n@Component({\n  selector: 'app-nao-logado',\n  templateUrl: './nao-logado.component.html',\n  styleUrls: ['./nao-logado.component.scss']\n})\nexport class NaoLogadoComponent implements OnInit {\n\n\n  constructor(loginService: AuthService) {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<nav class=\"navbar login-container\">\n  <div class=\"container-fluid mx-auto \">\n\n    <h1 class=\"navbar-brand mb-0 mx-auto hamburguer\"><i class=\"fa-solid fa-burger\"></i></h1>\n  </div>\n</nav>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../service/service_login/auth.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Usuario} from '../../models/usuario';\nimport {CadastroService} from '../../service/service_login/cadastro.service';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.scss']\n})\nexport class RegistroComponent implements OnInit {\n  mostrarBtn = !this.authService.estaAutenticado();\n  usuario: Usuario = new Usuario();\n  formRegistro: FormGroup;\n\n  constructor(private authService: AuthService, private fb: FormBuilder, private cadastroService: CadastroService) {\n  }\n\n  createForm() {\n    this.formRegistro = this.fb.group({\n      login: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      name: ['', [Validators.minLength(4), Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  registrar() {\n    if (this.formRegistro.dirty && this.formRegistro.valid) {\n      this.usuario = Object.assign({}, this.usuario, this.formRegistro.value);\n      this.cadastroService.postLogin(this.usuario).subscribe(res => {\n        alert('enviado com sucesso!');\n      });\n      console.log('registrar usuario', this.usuario);\n      return;\n    }\n    alert('preencha o formulario!');\n\n  }\n\n  registrarAdm() {\n    if (this.formRegistro.dirty && this.formRegistro.valid) {\n      this.usuario = Object.assign({}, this.usuario, this.formRegistro.value);\n      this.cadastroService.postLoginAdm(this.usuario).subscribe(res => {\n        alert('enviado com sucesso!');\n      });\n      console.log('registrarAdm', this.usuario);\n      return;\n    }\n    alert('preencha o formulario!');\n  }\n}\n","<div class=\"registro-bg\">\n\n\n  <form class=\"d-grid py-5 \" [formGroup]=\"formRegistro\">\n    <div class=\"mx-auto d-grid mb-5 h1-bg\">\n      <h1 class=\"h1-registro mb-3 mx-auto\"> Registro </h1>\n    </div>\n    <!--  login-->\n    <div class=\"mb-3 div-input mx-auto\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">login </label>\n      <input type=\"login\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\"\n             [ngClass]=\"{'is-invalid': formRegistro.controls['login'].invalid &&\n           (formRegistro.controls['login'].touched || formRegistro.controls['login'].dirty), 'is-valid':formRegistro.controls['login'].valid} \"\n\n             formControlName=\"login\"\n             [class.valid]=\"formRegistro.controls['login'].valid\"\n             [class.invalid]=\"formRegistro.controls['login'].invalid &&\n(formRegistro.controls['login'].touched || formRegistro.controls['login'].dirty)\">\n      <div\n        *ngIf=\"formRegistro.controls['login'].invalid && (formRegistro.controls['login'].touched || formRegistro.controls['login'].dirty)\">\n        <small class=\"error-message\" *ngIf=\"formRegistro.controls['login'].hasError('required')\">\n          Esse campo precisa ser preenchido.\n        </small>\n\n      </div>\n    </div>\n    <!--senha-->\n    <div class=\" mx-auto  div-input\">\n      <div class=\"col-auto\">\n\n      </div>\n      <div class=\"col-auto\">\n        <label for=\"inputPassword6\" class=\"col-form-label\">password</label>\n        <input type=\"password\" id=\"inputPassword6\" class=\"form-control\" formControlName=\"password\" placeholder=\"insira sua senha...\"\n               [ngClass]=\"{'is-invalid': formRegistro.controls['password'].invalid &&\n           (formRegistro.controls['password'].touched || formRegistro.controls['password'].dirty), 'is-valid':formRegistro.controls['password'].valid} \"\n\n               [class.valid]=\"formRegistro.controls['password'].valid\"\n               [class.invalid]=\"formRegistro.controls['password'].invalid &&\n(formRegistro.controls['password'].touched || formRegistro.controls['password'].dirty)\">\n        <div *ngIf=\"formRegistro.controls['password'].invalid &&\n           (formRegistro.controls['password'].touched || formRegistro.controls['password'].dirty)\">\n          <small class=\"error-message\" *ngIf=\"formRegistro.controls['password'].hasError('required')\">\n            Esse campo precisa ser preenchido.\n          </small>\n\n        </div>\n      </div>\n    </div>\n    <!--nome-->\n    <div class=\" g-3  mx-auto div-input \" >\n      <div class=\"col-auto\">\n\n      </div>\n      <div class=\"col-auto\">\n        <label for=\"nome\" class=\"col-form-label\">nome</label>\n        <input type=\"text\" id=\"nome\" class=\"form-control\" formControlName=\"name\" placeholder=\"insira seu nome...\"\n               [ngClass]=\"{'is-invalid': formRegistro.controls['name'].invalid &&\n           (formRegistro.controls['name'].touched || formRegistro.controls['name'].dirty), 'is-valid':formRegistro.controls['name'].valid} \"\n               [class.valid]=\"formRegistro.controls['name'].valid\"\n               [class.invalid]=\"formRegistro.controls['name'].invalid &&\n           (formRegistro.controls['name'].touched || formRegistro.controls['name'].dirty)\">\n        <div *ngIf=\"formRegistro.controls['name'].invalid &&\n           (formRegistro.controls['name'].touched || formRegistro.controls['name'].dirty)\">\n          <small class=\"error-message\" *ngIf=\"formRegistro.controls['name'].hasError('minlength')\">\n            Esse campo precisa de no minimo 4 caracteres.\n          </small>\n          <small class=\"error-message\" *ngIf=\"formRegistro.controls['name'].hasError('required')\">\n            Esse campo precisa ser preenchido.\n          </small>\n\n        </div>\n\n      </div>\n    </div>\n\n\n  </form>\n  <div class=\"d-flex my-5\">\n    <div class=\"col-auto mx-auto\">\n      <button type=\"submit\" class=\"btn  mb-3 me-4\" routerLink=\"/login\" *ngIf=\"mostrarBtn\">Voltar ao login</button>\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"registrar()\" *ngIf=\"mostrarBtn\" >registrar</button>\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"registrarAdm()\" *ngIf=\"!mostrarBtn\">registrar</button>\n\n\n    </div>\n  </div>\n</div>\n\n","export class Produto {\r\n  id?: number;\r\n  name: string;\r\n  imageName: string;\r\n}\r\n\r\nexport class Ingrediente {\r\n  id?: number;\r\n  name: string;\r\n  imageName: string;\r\n  price: number;\r\n  ingredients: string;\r\n}\r\n\r\nexport class Promocao {\r\n  id?: number;\r\n  name: string;\r\n  imageName: string;\r\n  price: number;\r\n  details: string;\r\n}\r\n\r\n\r\n\r\n\r\n","export class Usuario {\r\n  id?: string;\r\n  login: string;\r\n  password: string;\r\n  role: string;\r\n  name: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nao-encontrada',\n  templateUrl: './nao-encontrada.component.html',\n  styleUrls: ['./nao-encontrada.component.scss']\n})\nexport class NaoEncontradaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"container\">\n  <i class=\"fa-solid fa-x\"></i>\n  <h2> página não encontrada</h2>\n</section>\n","import {Injectable} from '@angular/core';\nimport {Ingrediente, Produto, Promocao} from '../../models/produto';\nimport {Observable, Subscription} from 'rxjs';\nimport {environment} from '../../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarrinhoService {\n  baseUrl: string = environment.baseUrl;\n\n  constructor(private http: HttpClient) {\n  }\n\n  obtemCarrinho(): Observable<Ingrediente[]> {\n    const url = `${this.baseUrl}/chart`;\n    return this.http.get<Ingrediente[]>(url);\n  }\n\n  adicionarAoCarrinho(carrinho: Ingrediente) {\n    const url = `${this.baseUrl}/chart`;\n    return this.http.post<Ingrediente>(url, carrinho);\n  }\n  adicionarAoCarrinhoP(carrinho: Promocao) {\n    const url = `${this.baseUrl}/chart`;\n    return this.http.post<Promocao>(url, carrinho);\n  }\n\n\n  removerCarrinho(id: number) {\n    const url = `${this.baseUrl}/chart${id}`;\n    return this.http.delete<void>(url);\n  }\n\n  limparCarrinho() {\n\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Usuario} from '../../models/usuario';\nimport {Router} from '@angular/router';\nimport {environment} from '../../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, tap} from 'rxjs/operators';\nimport {throwError} from 'rxjs';\nimport jwt_decode from 'jwt-decode';\nimport {CookieService} from 'ngx-cookie-service';\nimport {UserToken} from '../../models/user-token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  mostrarMenu = new EventEmitter<boolean>();\n  token = '';\n\n  constructor(private router: Router, private http: HttpClient, private cookieService: CookieService) {\n  }\n\n  baseUrl: string = environment.baseUrl;\n\n  estaAutenticado(): boolean {\n    return !!this.getToken();\n  }\n\n  eadm(): boolean {\n    return !!this.cookieService.get('eadm');\n  }\n\n  logar(usuario: Usuario) {\n    const url = `${this.baseUrl}/login`;\n    return this.http.post<Usuario>(url, usuario).pipe(\n      tap(token => {\n        this.token = JSON.parse(JSON.stringify(token));\n        const decode = jwt_decode(this.token) as UserToken;\n        // console.log(this.token);\n        this.cookieService.set('access-token', `${token}`, decode.exp);\n        this.router.navigate(['/']);\n        if (decode.role === 'admin') {\n          this.mostrarMenu.emit(this.estaAutenticado());\n          this.cookieService.set('eadm', decode.role);\n        }\n        if (decode.role === 'user') {\n          this.mostrarMenu.emit(this.estaAutenticado());\n        }\n\n      }),\n      catchError((err) => {\n        return throwError(err);\n      })\n    )\n      .subscribe();\n\n  }\n\n  public getToken(): string {\n    return this.cookieService.get('access-token');\n  }\n\n  public decodePayloadJWT(token: string): Usuario {\n    try {\n      const decode = jwt_decode(token) as UserToken;\n      return {\n        id: decode.id,\n        login: decode.name,\n        role: decode.role,\n      } as Usuario;\n    } catch (Error) {\n      return null;\n    }\n  }\n\n  logout() {\n    this.cookieService.delete('access-token');\n    this.cookieService.delete('eadm');\n    this.mostrarMenu.emit(false);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../../../environments/environment';\nimport {Router} from '@angular/router';\nimport {HttpClient} from '@angular/common/http';\nimport {CookieService} from 'ngx-cookie-service';\nimport {Ingrediente} from '../../models/produto';\nimport {Usuario} from '../../models/usuario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CadastroService {\n  baseUrl: string = environment.baseUrl;\n\n  constructor(private router: Router, private http: HttpClient, private cookieService: CookieService) {\n  }\n\n  getLogin() {\n    const url = `${this.baseUrl}/user/info`;\n    return this.http.get<Usuario>(url);\n  }\n\n  postLogin(usuario: Usuario) {\n    const url = `${this.baseUrl}/user`;\n    return this.http.post<Ingrediente>(url, usuario);\n  }\n\n  postLoginAdm(adm: Usuario) {\n    const url = `${this.baseUrl}/user/admin`;\n    return this.http.post<Ingrediente>(url, adm);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Ingrediente, Produto, Promocao} from '../../models/produto';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../../environments/environment';\nimport {Usuario} from '../../models/usuario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n  baseUrl: string = environment.baseUrl;\n  produtos: Produto[] = [];\n  ingredientes: Ingrediente[] = [];\n  promocoes: Promocao[] = [];\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  postProduto(produtos: Ingrediente) {\n    const url = `${this.baseUrl}/ingredients`;\n    return this.http.post<Ingrediente>(url, produtos);\n  }\n\n  postProdutoLista(produtos: Produto) {\n    const url = `${this.baseUrl}/categories`;\n    return this.http.post<Produto>(url, produtos);\n  }\n\n  postProdutoImg(produtos: Produto, id: number) {\n    const url = `${this.baseUrl}/ /image/${produtos}/${id}`;\n    return this.http.post<Produto>(url, produtos);\n  }\n\n  postPromocoes(produtos: Promocao) {\n    const url = `${this.baseUrl}/offers`;\n    return this.http.post<Promocao>(url, produtos);\n  }\n\n  getProdutoById(id: string) {\n    const url = `${this.baseUrl}/categories${id}`;\n    return this.http.get<Produto>(url);\n  }\n\n  getIngredienteById(id: string) {\n    const url = `${this.baseUrl}/ingredients${id}`;\n    return this.http.get<Ingrediente>(url);\n  }\n\n  getPromocaoById(id: string) {\n    const url = `${this.baseUrl}/offers${id}`;\n    return this.http.get<Promocao>(url);\n  }\n\n  getProdutosLista(): Observable<Produto[]> {\n    const url = `${this.baseUrl}/categories`;\n    return this.http.get<Produto[]>(url);\n  }\n\n  getPromocoes(): Observable<Promocao[]> {\n    const url = `${this.baseUrl}/offers/`;\n    return this.http.get<Promocao[]>(url);\n  }\n\n  getIngrediente(id: number): Observable<Ingrediente[]> {\n    const url = `${this.baseUrl}/ingredients/`;\n    return this.http.get<Ingrediente[]>(url);\n  }\n\n  deleteProdutoLista(id: number) {\n    const url = `${this.baseUrl}/categories/${id}`;\n    return this.http.delete<void>(url);\n  }\n\n  deleteIngredientes(id: number) {\n    return this.ingredientes.filter(produto => produto.id !== id);\n  }\n\n  deletePromocoes(id: number) {\n    return this.promocoes.filter(produto => produto.id !== id);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n  <div class=\"footer__container \">\n    <section>\n<!--   um texto sobre a empresa   -->\n<!--   o texto e do um lipsum generator q gera texto automaticamente   -->\n      <h2 class=\"footer__title\">sobre</h2>\n      <p class=\"footer__about-text\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non libero viverra, gravida lorem ut, hendrerit\n        augue. Vivamus laoreet leo non aliquam gravida. Donec facilisis libero ex, quis tristique elit eleifend et.\n        Quisque\n      </p>\n    </section>\n<!--  parte sobre como obter contato com a empresa  -->\n    <address>\n      <h2 class=\"footer__title ms-4\">contato</h2>\n      <ul>\n        <li><i class=\"fa-sharp fa-solid fa-envelope\"></i> email@email.com</li>\n        <li><i class=\"fa-solid fa-phone\"></i> (00) 000-000</li>\n        <li><i class=\"fa-brands fa-whatsapp\"></i> (00) 000-000</li>\n      </ul>\n    </address>\n  </div>\n\n</footer>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../service/service_login/auth.service';\n\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Usuario} from '../../models/usuario';\nimport {CadastroService} from '../../service/service_login/cadastro.service';\nimport {Observable} from 'rxjs';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  mudar = false;\n  eAdm = this.authService.eadm();\n  formBuscarProduto: FormGroup;\n  usuario: Usuario;\n\n  aparecerMenu() {\n    const btn: HTMLElement = document.getElementById('btn-mobile') as HTMLElement;\n    if (!this.mudar) {\n      btn.innerHTML = '<i class=\"fa-solid fa-xmark p-1\" ></i>';\n      this.mudar = true;\n    } else {\n      btn.innerHTML = '<i class=\"fa-solid fa-bars p-1\"></i>';\n      this.mudar = false;\n    }\n  }\n\n\n  constructor(private route: Router, private authService: AuthService, private fb: FormBuilder, private cadastroService: CadastroService) {\n  }\n\n  ngOnInit(): void {\n    this.authService.mostrarMenu.subscribe(\n      mostrar => this.eAdm = mostrar\n    );\n    this.createForm();\n    this.nome();\n  }\n\n// mudar apos o http\n  nome() {\n    this.cadastroService.getLogin().subscribe(res => {\n      this.usuario = res;\n    });\n  }\n\n  createForm() {\n    this.formBuscarProduto = this.fb.group({\n      nome: ['', [Validators.required]],\n    });\n  }\n\n\n  sair() {\n    alert('saindo...');\n    this.authService.logout();\n    this.route.navigate(['login']);\n  }\n\n  sumirMenu() {\n    const btn: HTMLElement = document.getElementById('btn-mobile') as HTMLElement;\n    if (this.mudar) {\n      btn.innerHTML = '<i class=\"fa-solid fa-bars p-1\"></i>';\n      this.mudar = false;\n    }\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg nav-bg\">\n  <div class=\"container-fluid\">\n    <button (click)=\"aparecerMenu()\" class=\"navbar-toggler botao \" type=\"button\" data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\" id=\"btn-mobile\">\n      <i class=\"fa-solid fa-bars p-1\"></i>\n    </button>\n\n\n    <!--    menu   -->\n    <div class=\"collapse navbar-collapse nav_menu-principal\" id=\"navbarSupportedContent\" (click)=\"sumirMenu()\">\n      <img src=\"assets/img/logo.png\" alt=\"foto de hamburgue gostoso\" width=\"100\" height=\"100\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"produtos-categorias\">Produtos</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"promocoes\">Promoções</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"comprar\">Carrinho</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"adicionar-produto\" *ngIf=\"eAdm\">Adicionar produto</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"adicionar-promocao\" *ngIf=\"eAdm\">Adicionar promoção</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"adicionar-ingredientes\" *ngIf=\"eAdm\">Adicionar ingrediente</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"historico-vendas\" *ngIf=\"eAdm\">Historico de vendas</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"registrar\" *ngIf=\"eAdm\">Registro</a>\n        </li>\n\n      </ul>\n\n\n    </div>\n    <div class=\"align-content-between d-flex\">\n      <p class=\"mx-4 my-auto\">Bem vindo {{usuario.name}}</p>\n      <button class=\"btn botao \" (click)=\"sair()\">Sair<i class=\"fa-solid fa-arrow-right-from-bracket ms-2\"></i>\n      </button>\n\n    </div>\n\n\n  </div>\n</nav>\n\n<div class=\"d-flex flex-column nav-bg nav-mobile\" *ngIf=\"mudar\" (click)=\"sumirMenu()\">\n  <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n    <li class=\"nav-item \">\n      <a class=\"nav-link mx-2 nav-first\" routerLink=\"produtos-categorias\">Produtos</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"promocoes\">Promoções</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"comprar\">Carrinho</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"adicionar-produto\" *ngIf=\"eAdm\">Adicionar produto</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"adicionar-ingredientes\" *ngIf=\"eAdm\">Adicionar ingrediente</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"adicionar-promocao\" *ngIf=\"eAdm\">Adicionar promoção</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"historico-vendas\" *ngIf=\"eAdm\">Historico de vendas</a>\n    </li>\n\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"registrar\" *ngIf=\"eAdm\">Registro</a>\n    </li>\n  </ul>\n\n</div>\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // baseUrl: 'https://pweb-production.up.railway.app'\n  baseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}