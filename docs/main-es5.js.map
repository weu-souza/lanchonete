{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/paths/adicionar-ingrediente/adicionar-ingrediente.component.ts","webpack:///src/app/paths/adicionar-ingrediente/adicionar-ingrediente.component.html","webpack:///src/app/paths/adicionar-produto/adicionar-produto.component.ts","webpack:///src/app/paths/adicionar-produto/adicionar-produto.component.html","webpack:///src/app/paths/comprar/comprar.component.ts","webpack:///src/app/paths/comprar/comprar.component.html","webpack:///src/app/paths/footer/footer.component.ts","webpack:///src/app/paths/footer/footer.component.html","webpack:///src/app/paths/guard/auth.guard.ts","webpack:///src/app/paths/guard/guard-adm.guard.ts","webpack:///src/app/paths/header/header.component.ts","webpack:///src/app/paths/header/header.component.html","webpack:///src/app/paths/historico-vendas/historico-vendas.component.ts","webpack:///src/app/paths/historico-vendas/historico-vendas.component.html","webpack:///src/app/paths/login/login.component.ts","webpack:///src/app/paths/login/login.component.html","webpack:///src/app/paths/models/produto.ts","webpack:///src/app/paths/models/usuario.ts","webpack:///src/app/paths/nao-encontrada/nao-encontrada.component.ts","webpack:///src/app/paths/nao-encontrada/nao-encontrada.component.html","webpack:///src/app/paths/nao-logado/nao-logado.component.ts","webpack:///src/app/paths/nao-logado/nao-logado.component.html","webpack:///src/app/paths/pedidos/pedidos.component.ts","webpack:///src/app/paths/pedidos/pedidos.component.html","webpack:///src/app/paths/produtos/produtoss.component.ts","webpack:///src/app/paths/produtos/produtoss.component.html","webpack:///src/app/paths/promocoes/promocoes.component.ts","webpack:///src/app/paths/promocoes/promocoes.component.html","webpack:///src/app/paths/registro/registro.component.ts","webpack:///src/app/paths/registro/registro.component.html","webpack:///src/app/paths/service/auth.service.ts","webpack:///src/app/paths/service/carrinho.service.ts","webpack:///src/app/paths/service/produto.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","loadChildren","m","ProdutosCategoriaModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","authService","mostrarMenu","estaAutenticado","title","subscribe","mostrar","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AdicionarIngredienteComponent","fb","produtoService","produto","fotoSrc","createForm","formAddProduto","group","nome","required","imagem","preco","min","ingredientes","event","span","document","getElementById","inputTarget","target","file","files","reader","FileReader","addEventListener","readerTarget","value","String","result","style","border","background","readAsDataURL","dirty","valid","Object","assign","postProduto","console","log","alert","promocao","postPromocoes","addProduto","addPromocao","atualizarProduto","AdicionarProdutoComponent","postProdutoLista","enviar","atualizar","ComprarComponent","route","carrinhoService","total","itensCarrinho","obtemCarrinho","reduce","prev","curr","length","filter","item","removerCarrinho","calculaTotal","limparCarrinho","navigate","FooterComponent","AuthGuard","next","state","providedIn","GuardAdmGuard","estaAutenticadoAdm","HeaderComponent","mudar","eAdm","btn","innerHTML","formBuscarProduto","logout","aparecerMenu","sumirMenu","sair","HistoricoVendasComponent","remover","LoginComponent","usuario","formLogin","email","senha","login","logar","registrar","Produto","Carrinho","Ingrediente","Promocao","Produtos","ingrediente","ProdutosLista","Promocoes","detalhe","Usuario","NaoEncontradaComponent","NaoLogadoComponent","loginService","PedidosComponent","ProdutossComponent","carrinhoS","produtos","obtemIngrediente","carrinho","adicionarAoCarrinho","excluirIngredientes","comprar","PromocoesComponent","getPromocoes","excluirPromocoes","RegistroComponent","mostrarBtn","formRegistro","minLength","AuthService","router","accessToken","accessTokenAdm","sessionStorage","getItem","setItem","emit","clear","CarrinhoService","JSON","parse","localStorage","push","stringify","ProdutoService","promocoes","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PromocoesComponent} from './paths/promocoes/promocoes.component';\nimport {AdicionarProdutoComponent} from './paths/adicionar-produto/adicionar-produto.component';\nimport {HistoricoVendasComponent} from './paths/historico-vendas/historico-vendas.component';\nimport {AdicionarIngredienteComponent} from './paths/adicionar-ingrediente/adicionar-ingrediente.component';\nimport {NaoEncontradaComponent} from './paths/nao-encontrada/nao-encontrada.component';\nimport {ComprarComponent} from './paths/comprar/comprar.component';\nimport {LoginComponent} from './paths/login/login.component';\nimport {RegistroComponent} from './paths/registro/registro.component';\nimport {AuthGuard} from './paths/guard/auth.guard';\nimport {GuardAdmGuard} from './paths/guard/guard-adm.guard';\nimport {ProdutossComponent} from './paths/produtos/produtoss.component';\n\n\nconst routes: Routes = [{\n  path: 'produtos-categorias/produtos/:id', component: ProdutossComponent, canActivate: [AuthGuard]\n},\n\n  {\n    path: 'produtos-categorias',\n    loadChildren: () => import('./paths/produtos-categoria/produtos-categoria.module').then(m => m.ProdutosCategoriaModule),\n    canActivate: [AuthGuard]\n  },\n  {path: '', redirectTo: 'produtos-categorias', pathMatch: 'full', canActivate: [AuthGuard]},\n  {path: 'promocoes', component: PromocoesComponent, canActivate: [AuthGuard]},\n  {path: 'adicionar-produto', component: AdicionarProdutoComponent, canActivate: [GuardAdmGuard, AuthGuard]},\n  {path: 'historico-vendas', component: HistoricoVendasComponent, canActivate: [GuardAdmGuard, AuthGuard]},\n  {path: 'adicionar-ingredientes', component: AdicionarIngredienteComponent, canActivate: [GuardAdmGuard, AuthGuard]},\n  {path: 'comprar', component: ComprarComponent, canActivate: [AuthGuard]},\n  {path: 'login', component: LoginComponent},\n  {path: 'registrar', component: RegistroComponent},\n  {path: '**', component: NaoEncontradaComponent},\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\nimport {AuthService} from './paths/service/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  mostrarMenu = this.authService.estaAutenticado();\n  title = 'lanchonete';\n\n  constructor(private authService: AuthService) {\n  }\n\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngOnInit() {\n    this.authService.mostrarMenu.subscribe(\n      mostrar => this.mostrarMenu = mostrar\n    );\n  }\n}\n","<ng-template #naologado class=\"d-grid\"><app-nao-logado></app-nao-logado></ng-template>\n<section class=\"bg-container \">\n  <app-header *ngIf=\"mostrarMenu else naologado \"></app-header>\n\n\n  <div\n    class=\"container-app  my-5 justify-content-around me-lg-auto ms-lg-5 me-md-auto ms-md-2 me-sm-auto me-sm-2 \">\n    <router-outlet></router-outlet>\n  </div>\n\n  <div  class=\"footer-container\">\n    <app-footer></app-footer>\n  </div>\n</section>\n\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HeaderComponent} from './paths/header/header.component';\nimport {FooterComponent} from './paths/footer/footer.component';\nimport {LoginComponent} from './paths/login/login.component';\nimport {PedidosComponent} from './paths/pedidos/pedidos.component';\nimport {RegistroComponent} from './paths/registro/registro.component';\nimport {PromocoesComponent} from './paths/promocoes/promocoes.component';\nimport {AdicionarProdutoComponent} from './paths/adicionar-produto/adicionar-produto.component';\nimport {HistoricoVendasComponent} from './paths/historico-vendas/historico-vendas.component';\nimport {AdicionarIngredienteComponent} from './paths/adicionar-ingrediente/adicionar-ingrediente.component';\nimport {NaoEncontradaComponent} from './paths/nao-encontrada/nao-encontrada.component';\nimport {ComprarComponent} from './paths/comprar/comprar.component';\nimport {AuthService} from './paths/service/auth.service';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NaoLogadoComponent} from './paths/nao-logado/nao-logado.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ProdutossComponent } from './paths/produtos/produtoss.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    PedidosComponent,\n    RegistroComponent,\n    PromocoesComponent,\n    AdicionarProdutoComponent,\n    HistoricoVendasComponent,\n    AdicionarIngredienteComponent,\n    NaoEncontradaComponent,\n    ComprarComponent,\n    NaoLogadoComponent,\n    ProdutossComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule\n\n\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Ingrediente, Produto, Promocao} from '../models/produto';\nimport {ProdutoService} from '../service/produto.service';\n\n@Component({\n  selector: 'app-adicionar-ingrediente',\n  templateUrl: './adicionar-ingrediente.component.html',\n  styleUrls: ['./adicionar-ingrediente.component.scss']\n})\nexport class AdicionarIngredienteComponent implements OnInit {\n\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  produto: Ingrediente = new Ingrediente();\n  promocao: Promocao;\n  produtos: Produto[];\n  fotoSrc = '';\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      nome: ['', [Validators.required]],\n      imagem: ['', [Validators.required]],\n      preco: ['', [Validators.required, Validators.min(1)]],\n      ingredientes: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.fotoSrc = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n\n  addProduto() {\n    if (this.formAddProduto.dirty && this.formAddProduto.valid) {\n      this.produto = Object.assign({}, this.produto, this.formAddProduto.value);\n      this.produtoService.postProduto(this.produto);\n      console.log('produto adicionada', this.produto);\n    } else {\n      alert('preencha o formulario!');\n    }\n\n  }\n\n  addPromocao() {\n    if (this.formAddProduto.dirty && this.formAddProduto.valid) {\n      this.promocao = Object.assign({}, this.promocao, this.formAddProduto.value);\n      this.produtoService.postPromocoes(this.promocao);\n      console.log('promoção adicionada');\n    } else {\n      alert('preencha o formulario!');\n    }\n\n  }\n\n  atualizarPromocao() {\n\n  }\n\n  atualizarProduto() {\n\n  }\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Adicionar itens</h1>\n  </div>\n  <!--    nome do produto -->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"produto\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control \" id=\"produto\" placeholder=\"nome do produto\" formControlName=\"nome\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty), 'is-valid':formAddProduto.controls['nome'].valid} \"\n\n           [class.valid]=\"formAddProduto.controls['nome'].valid\"\n           [class.invalid]=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['nome'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    preço do produto -->\n    <label for=\"preco\" class=\"form-label\">preço </label>\n    <input type=\"number\" class=\"form-control\" id=\"preco\" placeholder=\"R$ 00,00\" formControlName=\"preco\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['preco'].invalid &&\n           (formAddProduto.controls['preco'].touched || formAddProduto.controls['preco'].dirty), 'is-valid':formAddProduto.controls['preco'].valid} \"\n           [class.valid]=\"formAddProduto.controls['preco'].valid\"\n           [class.invalid]=\"formAddProduto.controls['preco'].invalid &&\n           (formAddProduto.controls['preco'].touched || formAddProduto.controls['preco'].dirty)\">\n\n    <div *ngIf=\"formAddProduto.controls['preco'].invalid &&\n           (formAddProduto.controls['preco'].touched || formAddProduto.controls['preco'].dirty)\">\n\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['preco'].hasError('required')\">\n        Esse campo precisa ser preenchido com números.\n      </small>\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['preco'].hasError('min')\">\n        Esse campo precisa ser maior que 00,00.\n      </small>\n    </div>\n  </div>\n\n  <!--ingredientes do produto-->\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <label for=\"texto\" class=\"form-label \">ingredientes</label>\n    <textarea class=\"form-control \" id=\"texto\" placeholder=\"digite o ingrediente...\" formControlName=\"ingredientes\"\n              [ngClass]=\"{'is-invalid': formAddProduto.controls['ingredientes'].invalid &&\n           (formAddProduto.controls['ingredientes'].touched || formAddProduto.controls['ingredientes'].dirty), 'is-valid':formAddProduto.controls['ingredientes'].valid}\"\n              [class.valid]=\"formAddProduto.controls['ingredientes'].valid\"\n              [class.invalid]=\"formAddProduto.controls['ingredientes'].invalid &&\n           (formAddProduto.controls['ingredientes'].touched || formAddProduto.controls['ingredientes'].dirty)\"></textarea>\n\n    <div *ngIf=\"formAddProduto.controls['ingredientes'].invalid &&\n           (formAddProduto.controls['ingredientes'].touched || formAddProduto.controls['ingredientes'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['nome'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto \">\n    <label for=\"formFile\" class=\"form-label\"><img [src]=\"fotoSrc\" alt=\"escolha uma imagem\" class=\"img-label img\"\n                                                  id=\"span_imagem\"></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imagem\"\n           [class.valid]=\"formAddProduto.controls['imagem'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imagem'].invalid &&\n           (formAddProduto.controls['imagem'].touched || formAddProduto.controls['imagem'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"d-lg-flex  flex-wrap mx-auto\">\n\n    <div class=\"col-auto ms-lg-3 \">\n      <button type=\"submit\" class=\"btn  mb-3 \" (click)=\"addProduto()\">Adicionar\n        Produto\n      </button>\n    </div>\n\n    <div class=\"col-auto   ms-lg-3\">\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"addPromocao()\">Adicionar\n        Promoção\n      </button>\n    </div>\n\n    <div class=\"col-auto  ms-lg-3\">\n      <button type=\"submit\" class=\"btn  mb-3 \" (click)=\"atualizarProduto()\" >\n        Atualizar\n        Produto\n      </button>\n    </div>\n\n    <div class=\"col-auto ms-lg-3 \">\n      <button type=\"submit\" class=\"btn  mb-3 \" (click)=\"addPromocao()\" >Atualizar\n        Promoção\n      </button>\n    </div>\n\n  </div>\n\n</form>\n\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Produto} from '../models/produto';\nimport {ProdutoService} from '../service/produto.service';\n\n@Component({\n  selector: 'app-contato',\n  templateUrl: './adicionar-produto.component.html',\n  styleUrls: ['./adicionar-produto.component.scss']\n})\nexport class AdicionarProdutoComponent implements OnInit {\n  span: HTMLElement;\n  formAddProduto: FormGroup;\n  produto: Produto = new Produto();\n  fotoSrc = '';\n\n  constructor(private fb: FormBuilder, private produtoService: ProdutoService) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formAddProduto = this.fb.group({\n      nome: ['', [Validators.required]],\n      imagem: ['', [Validators.required]]\n    });\n  }\n\n  imagem(event) {\n    this.span = document.getElementById('span_imagem');\n    const inputTarget = event.target;\n    const file = inputTarget.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        const readerTarget = e.target;\n        this.formAddProduto.value.imagem = String(readerTarget.result);\n        this.span.style.border = 'none';\n        this.span.style.background = 'none';\n        this.fotoSrc = String(readerTarget.result);\n\n      });\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n  enviar() {\n    if (this.formAddProduto.dirty && this.formAddProduto.valid) {\n      this.produto = Object.assign({}, this.produto, this.formAddProduto.value);\n      this.produtoService.postProdutoLista(this.produto);\n    } else {\n      alert('preencha o formulario!');\n    }\n\n\n  }\n\n  atualizar() {\n    console.log('atualizar', this.formAddProduto.value);\n  }\n}\n","<form class=\"contato-bg p-5 rounded d-grid\" [formGroup]=\"formAddProduto\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Adicionar Lista de produtos</h1>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-5 div-input\">\n    <!--    nome do produto -->\n    <label for=\"email\" class=\"form-label\">nome do produto</label>\n    <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Digite um nome...\" formControlName=\"nome\"\n           [ngClass]=\"{'is-invalid': formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty), 'is-valid':formAddProduto.controls['nome'].valid} \"\n           [class.valid]=\"formAddProduto.controls['nome'].valid\"\n           [class.invalid]=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n    <div *ngIf=\"formAddProduto.controls['nome'].invalid &&\n           (formAddProduto.controls['nome'].touched || formAddProduto.controls['nome'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formAddProduto.controls['nome'].hasError('required')\">\n        Esse campo precisa ser preenchido.\n      </small>\n\n    </div>\n  </div>\n\n  <!--imagem-->\n  <div class=\"mb-3 mx-auto\">\n    <label for=\"formFile\" class=\"form-label\"><img [src]=\"fotoSrc\" alt=\"escolha uma imagem\" class=\"img-label img\" id=\"span_imagem\"></label>\n    <input type=\"file\" accept=\"image/*\" class=\"form-control\" id=\"formFile\" (change)=\"imagem($event)\"\n           formControlName=\"imagem\"\n           [class.valid]=\"formAddProduto.controls['imagem'].valid\"\n           [class.invalid]=\"formAddProduto.controls['imagem'].invalid &&\n           (formAddProduto.controls['imagem'].touched || formAddProduto.controls['imagem'].dirty)\">\n\n  </div>\n  <!--botão de enviar-->\n  <div class=\"col-auto mx-auto\">\n    <button type=\"submit\" class=\"btn  mb-3\" (click)=\"enviar()\">Enviar</button>\n    <button type=\"submit\" class=\"btn  mb-3 ms-4\"  (click)=\"atualizar()\">Atualizar\n    </button>\n  </div>\n\n</form>\n\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Ingrediente} from '../models/produto';\nimport {CarrinhoService} from '../service/carrinho.service';\n\n@Component({\n  selector: 'app-comprar',\n  templateUrl: './comprar.component.html',\n  styleUrls: ['./comprar.component.scss']\n})\nexport class ComprarComponent implements OnInit {\n  itensCarrinho: Ingrediente[];\n  total = 0;\n\n  constructor(private route: Router, private carrinhoService: CarrinhoService) {\n  }\n\n  ngOnInit(): void {\n    this.itensCarrinho = this.carrinhoService.obtemCarrinho();\n  }\n\n  calculaTotal() {\n    this.total = this.itensCarrinho.reduce((prev, curr) => prev + (curr.preco * this.itensCarrinho.length), 0);\n  }\n\n  removeProdutoCarrinho(id: number) {\n    this.itensCarrinho = this.itensCarrinho.filter(item => item.id !== id);\n    this.carrinhoService.removerCarrinho(id);\n    this.calculaTotal();\n  }\n\n  comprar() {\n    alert('parabéns, você finalizou a sua compra!');\n    this.carrinhoService.limparCarrinho();\n    this.route.navigate(['/']);\n  }\n\n}\n","<section>\n  <div class=\"mx-auto d-flex mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Carrinho</h1>\n  </div>\n\n  <div *ngIf=\"itensCarrinho.length >0 else semProduto\" class=\"d-flex row div-carrinho \">\n    <ul>\n      <li class=\"justify-content-between align-items-center d-flex\" *ngFor=\"let carrinho of itensCarrinho\">\n\n        <img [src]=\"carrinho.imagem\">\n        <p>{{carrinho.nome}}</p>\n        <p>{{carrinho.preco|currency: \"BRL\"}}</p>\n\n\n        <button class=\"remove-button\" (click)=\"removeProdutoCarrinho(carrinho.id)\"><i class=\"fa-solid fa-xmark\"></i>\n        </button>\n      </li>\n\n    </ul>\n    <h2 class=\"cart-total ms-4\">Total:{{total}}</h2>\n    <button class=\"buy-button btn w-auto \" (click)=\"comprar()\">Comprar</button>\n  </div>\n  <ng-template #semProduto>Nenhum produto foi adicionado ao carrinho</ng-template>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n  <div class=\"footer__container\">\n    <section>\n<!--   um texto sobre a empresa   -->\n<!--   o texto e do um lipsum generator q gera texto automaticamente   -->\n      <h2 class=\"footer__title\">sobre</h2>\n      <p class=\"footer__about-text\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non libero viverra, gravida lorem ut, hendrerit\n        augue. Vivamus laoreet leo non aliquam gravida. Donec facilisis libero ex, quis tristique elit eleifend et.\n        Quisque\n      </p>\n    </section>\n<!--  parte sobre como obter contato com a empresa  -->\n    <address>\n      <h2 class=\"footer__title ms-4\">contato</h2>\n      <ul>\n        <li><i class=\"fa-sharp fa-solid fa-envelope\"></i> email@email.com</li>\n        <li><i class=\"fa-solid fa-phone\"></i> (00) 000-000</li>\n        <li><i class=\"fa-brands fa-whatsapp\"></i> (00) 000-000</li>\n      </ul>\n    </address>\n  </div>\n\n</footer>\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {\n  }\n\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.authService.estaAutenticado()) {\n      this.route.navigate(['login']);\n      return false;\n    }\n    return true;\n\n\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuardAdmGuard implements CanActivate {\n  constructor(private authService: AuthService, private route: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if (!this.authService.estaAutenticadoAdm() && this.authService.estaAutenticado()) {\n      this.route.navigate(['nao-encontrada']);\n      return false;\n    }\n    return true;\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../service/auth.service';\n\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Usuario} from '../models/usuario';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  mudar = false;\n  eAdm = this.authService.estaAutenticadoAdm();\n  formBuscarProduto: FormGroup;\n  usuario: Usuario;\n\n  aparecerMenu() {\n    const btn: HTMLElement = document.getElementById('btn-mobile') as HTMLElement;\n    if (!this.mudar) {\n      btn.innerHTML = '<i class=\"fa-solid fa-xmark p-1\" ></i>';\n      this.mudar = true;\n    } else {\n      btn.innerHTML = '<i class=\"fa-solid fa-bars p-1\"></i>';\n      this.mudar = false;\n    }\n  }\n\n  // mudar apos o http\n  nome() {\n    if (this.eAdm) {\n      return 'Adm';\n    }\n    return 'weu';\n  }\n\n  constructor(private route: Router, private authService: AuthService, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.authService.mostrarMenu.subscribe(\n      mostrar => this.eAdm = mostrar\n    );\n    this.createForm();\n  }\n\n  createForm() {\n    this.formBuscarProduto = this.fb.group({\n      nome: ['', [Validators.required]],\n    });\n  }\n\n\n  sair() {\n    alert('saindo...');\n    this.authService.logout();\n    this.route.navigate(['login']);\n  }\n\n  sumirMenu() {\n    const btn: HTMLElement = document.getElementById('btn-mobile') as HTMLElement;\n    if (this.mudar) {\n      btn.innerHTML = '<i class=\"fa-solid fa-bars p-1\"></i>';\n      this.mudar = false;\n    }\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg nav-bg\" >\n  <div class=\"container-fluid\">\n    <button (click)=\"aparecerMenu()\" class=\"navbar-toggler botao \" type=\"button\" data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\" id=\"btn-mobile\">\n      <i class=\"fa-solid fa-bars p-1\"></i>\n    </button>\n\n\n    <!--    menu   -->\n    <div class=\"collapse navbar-collapse nav_menu-principal\" id=\"navbarSupportedContent\"   (click)=\"sumirMenu()\">\n      <img src=\"assets/img/16-hamburguer.svg\" alt=\"foto de hamburgue gostoso\" width=\"100\" height=\"100\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"produtos-categorias\">Produtos</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"promocoes\">Promoções</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"comprar\">Carrinho</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"adicionar-produto\" *ngIf=\"eAdm\">Adicionar produto</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"adicionar-ingredientes\" *ngIf=\"eAdm\">Adicionar ingrediente</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"historico-vendas\" *ngIf=\"eAdm\">Historico de vendas</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"registrar\" *ngIf=\"eAdm\">Registro</a>\n        </li>\n\n      </ul>\n\n\n    </div>\n    <div class=\"align-content-between d-flex\">\n      <p class=\"mx-4 my-auto\">Bem vindo {{nome()}}</p>\n      <button class=\"btn botao \" (click)=\"sair()\">Sair<i class=\"fa-solid fa-arrow-right-from-bracket ms-2\"></i>\n      </button>\n\n    </div>\n\n\n\n\n  </div>\n</nav>\n\n<div class=\"d-flex flex-column nav-bg nav-mobile\" *ngIf=\"mudar\" (click)=\"sumirMenu()\">\n  <img src=\"assets/img/16-hamburguer.svg\" alt=\"foto de hamburgue gostoso\" width=\"100\" height=\"200\">\n  <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n\n    <li class=\"nav-item \">\n      <a class=\"nav-link mx-2 nav-first\" routerLink=\"produtos-categorias\">Produtos</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"promocoes\">Promoções</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"comprar\">Carrinho</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"adicionar-produto\" *ngIf=\"eAdm\">Adicionar produto</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"adicionar-ingredientes\" *ngIf=\"eAdm\">Adicionar ingrediente</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link mx-2\" routerLink=\"historico-vendas\" *ngIf=\"eAdm\">Historico de vendas</a>\n    </li>\n\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"registrar\" *ngIf=\"eAdm\">Registro</a>\n    </li>\n  </ul>\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-historico-vendas',\n  templateUrl: './historico-vendas.component.html',\n  styleUrls: ['./historico-vendas.component.scss']\n})\nexport class HistoricoVendasComponent implements OnInit {\n  total = 20;\n  preco = 20;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  remover() {\n\n  }\n}\n","<section class=\"tabela\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-registro mb-3 mx-auto\">Historico de vendas</h1>\n  </div>\n  <table class=\"table mx-auto w-75 \">\n    <thead class=\"head-table\">\n    <tr>\n      <th scope=\"col\"></th>\n      <th scope=\"col\">nome</th>\n      <th scope=\"col\">produto comprado</th>\n      <th scope=\"col\">preço</th>\n    </tr>\n    </thead>\n    <tbody class=\"tbody-table\">\n    <tr>\n      <th scope=\"row\">1</th>\n      <td class=\"tabela\">Mark</td>\n      <td class=\"tabela\">hamburguer</td>\n      <td class=\"tabela\">{{preco | currency:\"BRL\"}}</td>\n      <td class=\"border-0\"><button class=\"btn remove-button \" (click)=\"remover()\"><i class=\"fa-solid fa-xmark\"></i></button></td>\n    </tr>\n    </tbody>\n    <tfoot>\n    <tr>\n      <th scope=\"col\">total</th>\n      <td rowspan=\"3\" class=\"tabela \">{{total | currency:\"BRL\"}}</td>\n    </tr>\n\n    </tfoot>\n  </table>\n</section>\n\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../service/auth.service';\nimport {Usuario} from '../models/usuario';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  formLogin: FormGroup;\n  usuario: Usuario = new Usuario();\n\n\n  constructor(private route: Router, public authService: AuthService, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.formLogin = this.fb.group({\n      email: ['', [Validators.email, Validators.required]],\n      senha: ['', [Validators.required]]\n    });\n  }\n\n  logar() {\n    // apos fazer o http vou mudar\n    if (this.formLogin.dirty && this.formLogin.valid) {\n      this.usuario = Object.assign({}, this.usuario, this.formLogin.value);\n      if (this.authService.login(this.usuario) ) {\n        this.route.navigate(['/']);\n        return;\n      }\n    }\n\n    alert('usuario incorreto!');\n    this.usuario.email = '';\n    this.usuario.senha = '';\n  }\n\n  registrar() {\n    // apos fazer o http vou mudar\n    this.route.navigate(['registrar']);\n  }\n}\n","<form class=\"login-bg p-5 rounded d-grid\" [formGroup]=\"formLogin\" (ngSubmit)=\"logar()\">\n  <div class=\"mx-auto d-grid mb-5 h1-bg\">\n    <h1 class=\"h1-login mb-3 mx-auto\">Login</h1>\n  </div>\n  <div class=\"mb-3 d-grid mx-auto mb-3 div-input\">\n    <!--    email -->\n    <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Email</label>\n    <input type=\"email\" class=\"form-control\" id=\"staticEmail\"\n           [ngClass]=\"{'is-invalid': formLogin.controls['email'].invalid &&\n           (formLogin.controls['email'].touched || formLogin.controls['email'].dirty), 'is-valid':formLogin.controls['email'].valid} \"\n           placeholder=\"email@email.com\"\n           formControlName=\"email\"\n           [class.valid]=\"formLogin.controls['email'].valid\"\n           [class.invalid]=\"formLogin.controls['email'].invalid &&\n(formLogin.controls['email'].touched || formLogin.controls['email'].dirty)\">\n    <div\n      *ngIf=\"formLogin.controls['email'].invalid && (formLogin.controls['email'].touched || formLogin.controls['email'].dirty)\">\n      <small class=\"error-message\" *ngIf=\"formLogin.controls['email'].hasError('email')\">\n        Email invalido!\n      </small>\n\n    </div>\n  </div>\n\n  <div class=\"mb-3 d-grid mx-auto mb-4 div-input\">\n    <!--   senha -->\n    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Senha</label>\n    <input type=\"password\" class=\"form-control\" id=\"inputPassword\"\n           placeholder=\"digite sua senha\"\n           [ngClass]=\"{'is-invalid': formLogin.controls['senha'].invalid &&\n           (formLogin.controls['senha'].touched || formLogin.controls['senha'].dirty), 'is-valid':formLogin.controls['senha'].valid} \"\n           formControlName=\"senha\" [class.valid]=\"formLogin.controls['senha'].valid\"\n           [class.invalid]=\"formLogin.controls['senha'].invalid &&\n(formLogin.controls['email'].touched || formLogin.controls['senha'].dirty)\">\n  </div>\n\n  <div class=\"d-flex mx-auto my-5\">\n    <div class=\"col-auto \">\n      <input type=\"submit\" class=\"btn  mb-3 botao\" value=\"login\">\n    </div>\n    <div class=\"col-auto ms-3\">\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"registrar()\">registrar</button>\n    </div>\n  </div>\n</form>\n\n\n","export class Produto {\r\n  id: number;\r\n  nome: string;\r\n  imagem: string;\r\n}\r\n\r\nexport class Carrinho implements Ingrediente {\r\n  id: number;\r\n  imagem: string;\r\n  ingrediente: string;\r\n  nome: string;\r\n  preco: number;\r\n\r\n}\r\n\r\nexport class Ingrediente {\r\n  id: number;\r\n  nome: string;\r\n  imagem: string;\r\n  preco: number;\r\n  ingrediente: string;\r\n}\r\n\r\nexport class Promocao {\r\n  id: number;\r\n  nome: string;\r\n  imagem: string;\r\n  preco: number;\r\n  detalhe: string;\r\n}\r\n\r\nexport const Produtos: Ingrediente[] = [\r\n  {\r\n    id: 1,\r\n    nome: 'hamburguer',\r\n    imagem: 'assets/img/hamburguer.jpg',\r\n    preco: 25,\r\n    ingrediente: 'pão, carne, queijo, alface,tomate.'\r\n  },\r\n  {\r\n    id: 2,\r\n    nome: 'pizza',\r\n    imagem: 'assets/img/pizza.jpeg',\r\n    preco: 30,\r\n    ingrediente: 'pão, carne, batata, alface,tomate.'\r\n  },\r\n  {\r\n    id: 3,\r\n    nome: 'refrigerante',\r\n    imagem: 'assets/img/Refrigerentes.webp',\r\n    preco: 30,\r\n    ingrediente: 'refrigerantes latas e 2 litros'\r\n  }\r\n];\r\nexport const ProdutosLista: Produto[] = [\r\n  {id: 1, nome: 'hamburguer', imagem: 'assets/img/hamburguer.jpg'},\r\n  {id: 2, nome: 'pizza', imagem: 'assets/img/pizza.jpeg'},\r\n  {id: 3, nome: 'refrigerante', imagem: 'assets/img/Refrigerentes.webp'},\r\n];\r\nexport const Promocoes: Promocao[] = [\r\n  {id: 1, nome: 'Combo 1', imagem: 'assets/img/combopizzarefri.webp', preco: 60, detalhe: '2 pizza com um refrigerante 2 litros.'},\r\n  {id: 2, nome: 'Combo 2', imagem: 'assets/img/comboBatataHamburguer.jpeg', preco: 40, detalhe: '4 hamburguer com batata.'},\r\n  {id: 3, nome: 'Combo 3', imagem: 'assets/img/comboHamburguer.png', preco: 20, detalhe: 'hamburguer com refrigerante e batata.'}\r\n];\r\n\r\n\r\n\r\n\r\n","export class Usuario {\r\n  email: string;\r\n  senha: string;\r\n  eAdm: boolean;\r\n   nome: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nao-encontrada',\n  templateUrl: './nao-encontrada.component.html',\n  styleUrls: ['./nao-encontrada.component.scss']\n})\nexport class NaoEncontradaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"container\">\n  <i class=\"fa-solid fa-x\"></i>\n  <h2> página não encontrada</h2>\n</section>\n","import {Component, OnInit} from '@angular/core';\nimport {LoginComponent} from '../login/login.component';\nimport {AuthService} from '../service/auth.service';\n\n@Component({\n  selector: 'app-nao-logado',\n  templateUrl: './nao-logado.component.html',\n  styleUrls: ['./nao-logado.component.scss']\n})\nexport class NaoLogadoComponent implements OnInit {\n\n\n  constructor(loginService: AuthService) {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<nav class=\"navbar login-container\">\n  <div class=\"container-fluid mx-auto \">\n\n    <h1 class=\"navbar-brand mb-0 mx-auto hamburguer\"><i class=\"fa-solid fa-burger\"></i></h1>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pedidos',\n  templateUrl: './pedidos.component.html',\n  styleUrls: ['./pedidos.component.scss']\n})\nexport class PedidosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pedidos works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {Ingrediente} from '../models/produto';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from '../service/auth.service';\nimport {ProdutoService} from '../service/produto.service';\nimport {CarrinhoService} from '../service/carrinho.service';\n\n@Component({\n  selector: 'app-produtoss',\n  templateUrl: './produtoss.component.html',\n  styleUrls: ['./produtoss.component.scss']\n})\nexport class ProdutossComponent implements OnInit {\n  eAdm = this.authService.estaAutenticadoAdm();\n  produtos: Ingrediente[] = [];\n  produto: Ingrediente = new Ingrediente();\n  carrinho: Ingrediente;\n\n  constructor(\n    private route: Router,\n    private authService: AuthService,\n    private produtoService: ProdutoService,\n    private carrinhoS: CarrinhoService) {\n  }\n\n  ngOnInit(): void {\n    this.produtoService.obtemIngrediente().subscribe(produto => this.produtos = produto);\n\n  }\n\n  comprar() {\n    // vou mudar pra buscar pelo id quando for fazer o http\n    const produto: Ingrediente = {\n      ...this.carrinho,\n    };\n    this.carrinhoS.adicionarAoCarrinho(produto);\n  }\n\n  remover(id: number) {\n    this.produtos = this.produtos.filter(produtos => produtos.id !== id);\n    this.produtoService.excluirIngredientes(this.produto.id);\n\n  }\n\n  atualizar() {\n\n  }\n}\n","<div class=\"row row-cols-1 row-cols-md-2 g-4 w-100\">\n  <!--inserir as variaveis aqui-->\n  <div class=\"card card-container p-2 ms-5 \" >\n    <img [src]=\"produto?.imagem\" class=\"card-img-top\" alt=\"...\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{produto?.nome}}</h5>\n      <p class=\"card-text\">{{produto?.ingrediente}}</p>\n      <p class=\"card-text\">{{produto?.preco | currency: 'BRL'}}</p>\n      <div class=\"d-flex justify-content-between\">\n        <a class=\"btn btn-card\" (click)=\"comprar()\">Comprar</a>\n        <button class=\"btn remove-button\" (click)=\"remover(produto.id)\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-xmark\"></i></button>\n        <button class=\"btn remove-button\" (click)=\"atualizar()\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-pen-to-square\"></i>\n        </button>\n      </div>\n\n    </div>\n\n  </div>\n\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../service/auth.service';\nimport {ProdutoService} from '../service/produto.service';\nimport {Ingrediente, Promocao,} from '../models/produto';\n\n@Component({\n  selector: 'app-promocoes',\n  templateUrl: './promocoes.component.html',\n  styleUrls: ['./promocoes.component.scss']\n})\nexport class PromocoesComponent implements OnInit {\n  eAdm = this.authService.estaAutenticadoAdm();\n  produtos: Promocao[] = [];\n  produto: Promocao = new Promocao();\n\n  constructor(private route: Router, private authService: AuthService, private produtoService: ProdutoService) {\n  }\n\n  ngOnInit(): void {\n    this.produtoService.getPromocoes().subscribe(produto => this.produtos = produto);\n  }\n\n  comprar() {\n    // vou mudar pra buscar pelo id quando for fazer o http\n    this.route.navigate(['comprar']);\n  }\n\n  remover(id: number) {\n    this.produtos = this.produtos.filter(produtos => produtos.id !== id);\n    this.produtoService.excluirPromocoes(this.produto.id);\n  }\n\n  atualizar() {\n\n  }\n}\n"," <div class=\"row row-cols-1 row-cols-md-2 g-4 w-100\">\n    <!--inserir as variaveis aqui-->\n    <div class=\"card card-container p-2 ms-5\" *ngFor=\"let produto of produtos\">\n      <img [src]=\"produto.imagem\" class=\"card-img-top\" alt=\"...\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title \">{{produto.nome}}</h5>\n        <p class=\"card-text\">{{produto.detalhe}}</p>\n        <p class=\"card-text\">{{produto.preco | currency: \"BRL\"}}</p>\n        <div class=\"d-flex justify-content-between\">\n          <a class=\"btn btn-card\" (click)=\"comprar()\">Comprar</a>\n          <button class=\"btn remove-button\" (click)=\"remover(produto.id)\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-xmark\"></i></button>\n          <button class=\"btn remove-button\" (click)=\"atualizar()\" *ngIf=\"eAdm\"><i class=\"fa-solid fa-pen-to-square\"></i>\n          </button>\n        </div>\n      </div>\n\n    </div>\n\n\n  </div>\n\n\n\n\n\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../service/auth.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Usuario} from '../models/usuario';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.scss']\n})\nexport class RegistroComponent implements OnInit {\n  mostrarBtn = !this.authService.estaAutenticadoAdm();\n  usuario: Usuario = new Usuario();\n  formRegistro: FormGroup;\n\n  constructor(private authService: AuthService, private fb: FormBuilder) {\n  }\n\n  createForm() {\n    this.formRegistro = this.fb.group({\n      email: ['', [Validators.email, Validators.required]],\n      senha: ['', [Validators.required]],\n      nome: ['', [Validators.minLength(4), Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  registrar() {\n    if (this.formRegistro.dirty && this.formRegistro.valid) {\n      this.usuario = Object.assign({}, this.usuario, this.formRegistro.value);\n      console.log('registrar usuario', this.usuario);\n      return;\n    }\n    alert('preencha o formulario!');\n\n  }\n\n  registrarAdm() {\n    if (this.formRegistro.dirty && this.formRegistro.valid) {\n      this.usuario = Object.assign({}, this.usuario, this.formRegistro.value);\n      console.log('registrarAdm', this.usuario);\n      return;\n    }\n    alert('preencha o formulario!');\n  }\n}\n","<div class=\"registro-bg\">\n\n\n  <form class=\"d-grid py-5 \" [formGroup]=\"formRegistro\">\n    <div class=\"mx-auto d-grid mb-5 h1-bg\">\n      <h1 class=\"h1-registro mb-3 mx-auto\"> Registro </h1>\n    </div>\n    <!--  email-->\n    <div class=\"mb-3 div-input mx-auto\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">Email </label>\n      <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\"\n             [ngClass]=\"{'is-invalid': formRegistro.controls['email'].invalid &&\n           (formRegistro.controls['email'].touched || formRegistro.controls['email'].dirty), 'is-valid':formRegistro.controls['email'].valid} \"\n\n             formControlName=\"email\"\n             [class.valid]=\"formRegistro.controls['email'].valid\"\n             [class.invalid]=\"formRegistro.controls['email'].invalid &&\n(formRegistro.controls['email'].touched || formRegistro.controls['email'].dirty)\">\n      <div\n        *ngIf=\"formRegistro.controls['email'].invalid && (formRegistro.controls['email'].touched || formRegistro.controls['email'].dirty)\">\n        <small class=\"error-message\" *ngIf=\"formRegistro.controls['email'].hasError('email')\">\n          Email invalido!\n        </small>\n        <small class=\"error-message\" *ngIf=\"formRegistro.controls['email'].hasError('required')\">\n          Esse campo precisa ser preenchido.\n        </small>\n\n      </div>\n    </div>\n    <!--senha-->\n    <div class=\" mx-auto  div-input\">\n      <div class=\"col-auto\">\n\n      </div>\n      <div class=\"col-auto\">\n        <label for=\"inputPassword6\" class=\"col-form-label\">Senha</label>\n        <input type=\"password\" id=\"inputPassword6\" class=\"form-control\" formControlName=\"senha\" placeholder=\"insira sua senha...\"\n               [ngClass]=\"{'is-invalid': formRegistro.controls['senha'].invalid &&\n           (formRegistro.controls['senha'].touched || formRegistro.controls['senha'].dirty), 'is-valid':formRegistro.controls['senha'].valid} \"\n\n               [class.valid]=\"formRegistro.controls['senha'].valid\"\n               [class.invalid]=\"formRegistro.controls['senha'].invalid &&\n(formRegistro.controls['senha'].touched || formRegistro.controls['senha'].dirty)\">\n        <div *ngIf=\"formRegistro.controls['senha'].invalid &&\n           (formRegistro.controls['senha'].touched || formRegistro.controls['senha'].dirty)\">\n          <small class=\"error-message\" *ngIf=\"formRegistro.controls['senha'].hasError('required')\">\n            Esse campo precisa ser preenchido.\n          </small>\n\n        </div>\n      </div>\n    </div>\n    <!--nome-->\n    <div class=\" g-3  mx-auto div-input \" >\n      <div class=\"col-auto\">\n\n      </div>\n      <div class=\"col-auto\">\n        <label for=\"nome\" class=\"col-form-label\">nome</label>\n        <input type=\"text\" id=\"nome\" class=\"form-control\" formControlName=\"nome\" placeholder=\"insira seu nome...\"\n               [ngClass]=\"{'is-invalid': formRegistro.controls['nome'].invalid &&\n           (formRegistro.controls['nome'].touched || formRegistro.controls['nome'].dirty), 'is-valid':formRegistro.controls['nome'].valid} \"\n               [class.valid]=\"formRegistro.controls['nome'].valid\"\n               [class.invalid]=\"formRegistro.controls['nome'].invalid &&\n           (formRegistro.controls['nome'].touched || formRegistro.controls['nome'].dirty)\">\n        <div *ngIf=\"formRegistro.controls['nome'].invalid &&\n           (formRegistro.controls['nome'].touched || formRegistro.controls['nome'].dirty)\">\n          <small class=\"error-message\" *ngIf=\"formRegistro.controls['nome'].hasError('minlength')\">\n            Esse campo precisa de no minimo 4 caracteres.\n          </small>\n          <small class=\"error-message\" *ngIf=\"formRegistro.controls['nome'].hasError('required')\">\n            Esse campo precisa ser preenchido.\n          </small>\n\n        </div>\n\n      </div>\n    </div>\n\n\n  </form>\n  <div class=\"d-flex my-5\">\n    <div class=\"col-auto mx-auto\">\n      <button type=\"submit\" class=\"btn  mb-3 me-4\" routerLink=\"/login\" *ngIf=\"mostrarBtn\">Voltar ao login</button>\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"registrar()\" *ngIf=\"mostrarBtn\" >registrar</button>\n      <button type=\"submit\" class=\"btn  mb-3\" (click)=\"registrarAdm()\" *ngIf=\"!mostrarBtn\">registrar</button>\n\n\n    </div>\n  </div>\n</div>\n\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Usuario} from '../models/usuario';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  accessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c';\n  accessTokenAdm = 'eyJhbGciOiJIUzM4NCIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.bQTnz6AuMJvmXXQsVPrxeQNvzDkimo7VNXxHeSBfClLufmCVZRUuyTwJF311JHuh';\n  mostrarMenu = new EventEmitter<boolean>();\n\n\n  constructor(private router: Router) {\n  }\n\n  estaAutenticado(): boolean {\n    return !!sessionStorage.getItem('access-token');\n  }\n\n  estaAutenticadoAdm(): boolean {\n    return !!sessionStorage.getItem('access-tokenAdm');\n  }\n\n  login(usuario: Usuario): boolean {\n    if (usuario.email === 'adm@email.com' && usuario.senha === '123') {\n      sessionStorage.setItem('access-tokenAdm', this.accessTokenAdm);\n      sessionStorage.setItem('access-token', this.accessToken);\n      this.mostrarMenu.emit(this.estaAutenticadoAdm());\n      return true;\n    } else if (usuario.email === 'weu@email.com' && usuario.senha === '123') {\n      sessionStorage.setItem('access-token', this.accessToken);\n      this.mostrarMenu.emit(this.estaAutenticado());\n      return true;\n    }\n  }\n\n  logout() {\n    sessionStorage.clear();\n    this.mostrarMenu.emit(false);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Ingrediente} from '../models/produto';\nimport {Subscription} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarrinhoService {\n  carrinho: Ingrediente[] = [];\n\n  constructor() {\n  }\n\n  obtemCarrinho() {\n    this.carrinho = JSON.parse(localStorage.getItem('carrinho') || '[]');\n    return this.carrinho;\n  }\n\n  adicionarAoCarrinho(carrinho: Ingrediente) {\n    this.carrinho.push(carrinho);\n    localStorage.setItem('carrinho', JSON.stringify(this.carrinho));\n  }\n\n  removerCarrinho(id: number) {\n    this.carrinho = this.carrinho.filter(item => item.id !== id);\n  }\n\n  limparCarrinho() {\n    this.carrinho = [];\n    localStorage.clear();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Ingrediente, Produto, Produtos, ProdutosLista, Promocao, Promocoes} from '../models/produto';\nimport {Observable, of} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n  produtos: Produto[] = ProdutosLista;\n  ingredientes: Ingrediente[] = Produtos;\n  promocoes: Promocao[] = Promocoes;\n\n  constructor() {\n\n  }\n\n  postProduto(produtos: Ingrediente) {\n    return this.ingredientes.push(produtos);\n  }\n\n  postProdutoLista(produtos: Produto) {\n    return this.produtos.push(produtos);\n  }\n\n  postPromocoes(produtos: Promocao) {\n    return this.promocoes.push(produtos);\n  }\n\n  excluirProdutoLista(id: number) {\n    return this.produtos.filter(produto => produto.id !== id);\n  }\n\n  excluirIngredientes(id: number) {\n    return this.ingredientes.filter(produto => produto.id !== id);\n  }\n\n  excluirPromocoes(id: number) {\n    return this.promocoes.filter(produto => produto.id !== id);\n  }\n\n  getProdutosLista(): Observable<Produto[]> {\n    return of(this.produtos);\n  }\n\n  getPromocoes(): Observable<Promocao[]> {\n    return of(this.promocoes);\n  }\n\n  obtemIngrediente() {\n    return of(this.ingredientes);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}